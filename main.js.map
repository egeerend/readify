{
  "version": 3,
  "sources": ["src/app/shared/pipes/price-format.pipe.ts", "src/app/core/services/category.service.ts", "src/app/features/home/home.ts", "src/app/features/home/home.html", "src/app/features/login/login.ts", "src/app/features/login/login.html", "src/app/features/cart/cart.ts", "src/app/features/cart/cart.html", "src/app/features/admin/admin-layout.ts", "src/app/features/admin/dashboard/admin-dashboard.ts", "src/app/features/admin/dashboard/admin-dashboard.html", "src/app/features/admin/book-management/book-management.ts", "src/app/features/admin/book-management/book-management.html", "src/app/features/admin/user-management/user-management.ts", "src/app/features/admin/user-management/user-management.html", "src/app/features/admin/analytics/analytics.ts", "src/app/features/admin/analytics/analytics.html", "src/app/features/admin/settings/settings.ts", "src/app/features/admin/settings/settings.html", "src/app/features/admin/admin.routes.ts", "src/app/core/guards/admin.guard.ts", "src/app/features/admin-setup/admin-setup.ts", "src/app/app.routes.ts", "src/app/app.config.ts", "src/app/shared/currency-selector/currency-selector.ts", "src/app/shared/header/header.ts", "src/app/shared/header/header.html", "src/app/shared/footer/footer.ts", "src/app/shared/footer/footer.html", "src/app/shared/notifications/notifications.ts", "src/app/app.ts", "src/app/app.html", "src/main.ts"],
  "sourcesContent": ["import { Pipe, PipeTransform, OnDestroy } from '@angular/core';\r\nimport { PricingService, Currency } from '../../core/services/pricing.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Pipe({\r\n  name: 'priceFormat',\r\n  standalone: true,\r\n  pure: false // Make it impure so it updates when currency changes\r\n})\r\nexport class PriceFormatPipe implements PipeTransform, OnDestroy {\r\n  private currentCurrency: Currency | null = null;\r\n  private subscription?: Subscription;\r\n\r\n  constructor(private pricingService: PricingService) {\r\n    this.subscription = this.pricingService.currency$.subscribe(currency => {\r\n      this.currentCurrency = currency;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription?.unsubscribe();\r\n  }\r\n\r\n  transform(priceInUSD: number): string {\r\n    if (!this.currentCurrency) {\r\n      return `$${priceInUSD.toFixed(2)}`;\r\n    }\r\n\r\n    const convertedPrice = priceInUSD * this.currentCurrency.rate;\r\n    \r\n    // Format based on currency\r\n    switch (this.currentCurrency.code) {\r\n      case 'EUR':\r\n        return `${convertedPrice.toFixed(2)}€`;\r\n      case 'TRY':\r\n        return `₺${convertedPrice.toFixed(2)}`;\r\n      case 'USD':\r\n      default:\r\n        return `$${convertedPrice.toFixed(2)}`;\r\n    }\r\n  }\r\n}\r\n", "import { Injectable } from '@angular/core';\r\n\r\nexport interface BookCategory {\r\n  id: string;\r\n  name: string;\r\n  displayName: string;\r\n  description?: string;\r\n  icon?: string;\r\n  isActive: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n  \r\n  private categories: BookCategory[] = [\r\n    {\r\n      id: 'fiction',\r\n      name: 'fiction',\r\n      displayName: 'Fiction',\r\n      description: 'Imaginative and creative literature',\r\n      icon: '📖',\r\n      isActive: true\r\n    },\r\n    {\r\n      id: 'programming',\r\n      name: 'programming',\r\n      displayName: 'Programming',\r\n      description: 'Software development and coding',\r\n      icon: '💻',\r\n      isActive: true\r\n    },\r\n    {\r\n      id: 'science',\r\n      name: 'science',\r\n      displayName: 'Science',\r\n      description: 'Scientific research and discoveries',\r\n      icon: '🔬',\r\n      isActive: true\r\n    },\r\n    {\r\n      id: 'history',\r\n      name: 'history',\r\n      displayName: 'History',\r\n      description: 'Historical events and figures',\r\n      icon: '📜',\r\n      isActive: true\r\n    },\r\n    {\r\n      id: 'business',\r\n      name: 'business',\r\n      displayName: 'Business',\r\n      description: 'Business strategy and entrepreneurship',\r\n      icon: '💼',\r\n      isActive: true\r\n    },\r\n    {\r\n      id: 'mystery',\r\n      name: 'mystery',\r\n      displayName: 'Mystery',\r\n      description: 'Suspense and detective stories',\r\n      icon: '🔍',\r\n      isActive: true\r\n    },\r\n    {\r\n      id: 'fantasy',\r\n      name: 'fantasy',\r\n      displayName: 'Fantasy',\r\n      description: 'Magical and fantastical worlds',\r\n      icon: '🧙‍♂️',\r\n      isActive: true\r\n    },\r\n    {\r\n      id: 'romance',\r\n      name: 'romance',\r\n      displayName: 'Romance',\r\n      description: 'Love stories and relationships',\r\n      icon: '💕',\r\n      isActive: true\r\n    },\r\n    {\r\n      id: 'self-help',\r\n      name: 'self-help',\r\n      displayName: 'Self-Help',\r\n      description: 'Personal development and improvement',\r\n      icon: '🌟',\r\n      isActive: true\r\n    },\r\n    {\r\n      id: 'biography',\r\n      name: 'biography',\r\n      displayName: 'Biography',\r\n      description: 'Life stories of notable people',\r\n      icon: '👤',\r\n      isActive: true\r\n    },\r\n    {\r\n      id: 'technology',\r\n      name: 'technology',\r\n      displayName: 'Technology',\r\n      description: 'Latest tech trends and innovations',\r\n      icon: '⚡',\r\n      isActive: true\r\n    },\r\n    {\r\n      id: 'health',\r\n      name: 'health',\r\n      displayName: 'Health',\r\n      description: 'Health and wellness topics',\r\n      icon: '🏥',\r\n      isActive: true\r\n    },\r\n    {\r\n      id: 'cooking',\r\n      name: 'cooking',\r\n      displayName: 'Cooking',\r\n      description: 'Recipes and culinary arts',\r\n      icon: '👨‍🍳',\r\n      isActive: true\r\n    },\r\n    {\r\n      id: 'travel',\r\n      name: 'travel',\r\n      displayName: 'Travel',\r\n      description: 'Travel guides and adventures',\r\n      icon: '✈️',\r\n      isActive: true\r\n    },\r\n    {\r\n      id: 'art',\r\n      name: 'art',\r\n      displayName: 'Art',\r\n      description: 'Visual arts and creativity',\r\n      icon: '🎨',\r\n      isActive: true\r\n    },\r\n    {\r\n      id: 'more',\r\n      name: 'more',\r\n      displayName: 'More Categories',\r\n      description: 'Click to see all categories',\r\n      icon: '➕',\r\n      isActive: true\r\n    }\r\n  ];\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Get all active categories\r\n   */\r\n  getAllCategories(): BookCategory[] {\r\n    return this.categories.filter(cat => cat.isActive);\r\n  }\r\n\r\n  /**\r\n   * Get category names for display (like in dropdowns)\r\n   */\r\n  getCategoryNames(): string[] {\r\n    return this.getAllCategories().map(cat => cat.displayName);\r\n  }\r\n\r\n  /**\r\n   * Get category for API calls (lowercase names)\r\n   */\r\n  getCategoryApiNames(): string[] {\r\n    return this.getAllCategories().map(cat => cat.name);\r\n  }\r\n\r\n  /**\r\n   * Get category by ID\r\n   */\r\n  getCategoryById(id: string): BookCategory | undefined {\r\n    return this.categories.find(cat => cat.id === id);\r\n  }\r\n\r\n  /**\r\n   * Get category by display name\r\n   */\r\n  getCategoryByDisplayName(displayName: string): BookCategory | undefined {\r\n    return this.categories.find(cat => cat.displayName === displayName);\r\n  }\r\n\r\n  /**\r\n   * Add a new category\r\n   */\r\n  addCategory(category: Omit<BookCategory, 'id'>): void {\r\n    const id = category.name.toLowerCase().replace(/\\s+/g, '-');\r\n    this.categories.push({\r\n      id,\r\n      ...category\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update an existing category\r\n   */\r\n  updateCategory(id: string, updates: Partial<BookCategory>): boolean {\r\n    const index = this.categories.findIndex(cat => cat.id === id);\r\n    if (index !== -1) {\r\n      this.categories[index] = { ...this.categories[index], ...updates };\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Toggle category active state\r\n   */\r\n  toggleCategory(id: string): boolean {\r\n    const category = this.getCategoryById(id);\r\n    if (category) {\r\n      category.isActive = !category.isActive;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get categories for home page display (with icons)\r\n   */\r\n  getHomePageCategories(): BookCategory[] {\r\n    const regularCategories = this.getAllCategories().filter(cat => cat.id !== 'more').slice(0, 7); // Show first 7 regular categories\r\n    const moreCategory = this.getCategoryById('more');\r\n    \r\n    // Add the \"More Categories\" button at the end\r\n    if (moreCategory) {\r\n      regularCategories.push(moreCategory);\r\n    }\r\n    \r\n    return regularCategories;\r\n  }\r\n}\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Router } from '@angular/router';\r\nimport { BookService, Book } from '../../core/services/book.service';\r\nimport { CategoryService, BookCategory } from '../../core/services/category.service';\r\nimport { CartService } from '../../core/services/cart.service';\r\nimport { PriceFormatPipe } from '../../shared/pipes/price-format.pipe';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule, PriceFormatPipe],\r\n  templateUrl: './home.html',\r\n  styleUrls: ['./home.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  \r\n  featuredBooks: Book[] = [];\r\n  bestsellerBooks: Book[] = [];\r\n  newArrivals: Book[] = [];\r\n  categories: BookCategory[] = [];\r\n  isLoading = true;\r\n\r\n  // Category carousel properties\r\n  categoryScrollPosition = 0;\r\n  categoryScrollStep = 300;\r\n\r\n  constructor(\r\n    private bookService: BookService,\r\n    private categoryService: CategoryService,\r\n    private router: Router,\r\n    private cartService: CartService\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n    this.categories = this.categoryService.getHomePageCategories();\r\n    await this.loadBooks();\r\n    \r\n    // Log book images for debugging\r\n    console.log('Featured books loaded:', this.featuredBooks.map(book => ({\r\n      title: book.title,\r\n      coverImage: book.coverImage\r\n    })));\r\n  }\r\n\r\n  async loadBooks() {\r\n    try {\r\n      this.isLoading = true;\r\n      \r\n      // Load random featured books (changes on each refresh)\r\n      this.featuredBooks = await this.bookService.getRandomFeaturedBooks(6);\r\n      \r\n      // Load bestseller books\r\n      this.bestsellerBooks = await this.bookService.getBestsellerBooks(5);\r\n      \r\n      // Load new arrivals\r\n      this.newArrivals = await this.bookService.getNewArrivalBooks(4);\r\n      \r\n      this.isLoading = false;\r\n    } catch (error) {\r\n      console.error('Error loading books:', error);\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  // Refresh featured books\r\n  async refreshFeaturedBooks(): Promise<void> {\r\n    await this.loadBooks();\r\n  }\r\n\r\n  // Navigate to search page with category as subject\r\n  onCategoryClick(category: BookCategory): void {\r\n    // Handle \"More Categories\" specially\r\n    if (category.id === 'more') {\r\n      // Navigate to the book list page to show all categories\r\n      this.router.navigate(['/search']);\r\n      return;\r\n    }\r\n\r\n    // For regular categories, navigate with category filter\r\n    this.router.navigate(['/search'], { \r\n      queryParams: { \r\n        type: 'subject',\r\n        query: category.name \r\n      } \r\n    });\r\n  }\r\n\r\n  // Handle image load errors with multiple fallbacks\r\n  onImageError(event: Event): void {\r\n    const target = event.target as HTMLImageElement;\r\n    const originalSrc = target.src;\r\n    console.log('Image failed to load:', originalSrc);\r\n    \r\n    // Try fallback strategies\r\n    if (!target.dataset['fallbackAttempted']) {\r\n      target.dataset['fallbackAttempted'] = 'true';\r\n      \r\n      // First try: Generate a custom placeholder with book info\r\n      this.createBookPlaceholder(target);\r\n    } else {\r\n      // Final fallback: Use default no-cover image\r\n      target.src = 'assets/images/no-book-cover.jpg';\r\n      target.classList.add('error');\r\n      target.style.backgroundColor = '#f8f9fa';\r\n      target.style.border = '2px dashed #dee2e6';\r\n    }\r\n  }\r\n\r\n  // Create a custom placeholder for books without covers\r\n  private createBookPlaceholder(img: HTMLImageElement): void {\r\n    const bookTitle = img.alt || 'Unknown Book';\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    \r\n    if (ctx) {\r\n      canvas.width = 300;\r\n      canvas.height = 400;\r\n      \r\n      // Create gradient background\r\n      const gradient = ctx.createLinearGradient(0, 0, 0, 400);\r\n      gradient.addColorStop(0, '#667eea');\r\n      gradient.addColorStop(1, '#764ba2');\r\n      ctx.fillStyle = gradient;\r\n      ctx.fillRect(0, 0, 300, 400);\r\n      \r\n      // Add book icon\r\n      ctx.font = '48px Arial';\r\n      ctx.fillStyle = 'white';\r\n      ctx.textAlign = 'center';\r\n      ctx.fillText('📚', 150, 150);\r\n      \r\n      // Add title text\r\n      ctx.font = 'bold 16px Arial';\r\n      ctx.fillStyle = 'white';\r\n      const words = bookTitle.split(' ');\r\n      let line = '';\r\n      let y = 220;\r\n      \r\n      for (let n = 0; n < words.length; n++) {\r\n        const testLine = line + words[n] + ' ';\r\n        const metrics = ctx.measureText(testLine);\r\n        const testWidth = metrics.width;\r\n        \r\n        if (testWidth > 260 && n > 0) {\r\n          ctx.fillText(line, 150, y);\r\n          line = words[n] + ' ';\r\n          y += 20;\r\n        } else {\r\n          line = testLine;\r\n        }\r\n        \r\n        if (y > 340) break; // Prevent overflow\r\n      }\r\n      ctx.fillText(line, 150, y);\r\n      \r\n      // Convert canvas to data URL and set as image source\r\n      img.src = canvas.toDataURL();\r\n    } else {\r\n      // Fallback if canvas is not supported\r\n      img.src = 'assets/images/no-book-cover.jpg';\r\n    }\r\n  }\r\n\r\n  getRatingStars(rating: number): string[] {\r\n    const stars = [];\r\n    const fullStars = Math.floor(rating);\r\n    const hasHalfStar = rating % 1 !== 0;\r\n\r\n    for (let i = 0; i < fullStars; i++) {\r\n      stars.push('full');\r\n    }\r\n    \r\n    if (hasHalfStar) {\r\n      stars.push('half');\r\n    }\r\n    \r\n    while (stars.length < 5) {\r\n      stars.push('empty');\r\n    }\r\n    \r\n    return stars;\r\n  }\r\n\r\n  // Cart functionality\r\n  async addToCart(book: Book, event?: Event): Promise<void> {\r\n    if (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    await this.cartService.addToCart(book);\r\n    console.log(`${book.title} added to cart!`);\r\n  }\r\n\r\n  // Navigate to book detail page\r\n  quickViewBook(book: Book, event?: Event): void {\r\n    if (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    this.router.navigate(['/books', book.id]);\r\n  }\r\n\r\n  // Check if book is in cart\r\n  isInCart(bookId: string): boolean {\r\n    return this.cartService.isInCart(bookId);\r\n  }\r\n\r\n  // Get quantity of book in cart\r\n  getBookQuantity(bookId: string): number {\r\n    return this.cartService.getBookQuantity(bookId);\r\n  }\r\n\r\n  // Category carousel navigation methods\r\n  scrollCategoriesLeft(): void {\r\n    const container = document.querySelector('.category-carousel-container') as HTMLElement;\r\n    if (container) {\r\n      this.categoryScrollPosition = Math.max(0, this.categoryScrollPosition - this.categoryScrollStep);\r\n      container.scrollTo({\r\n        left: this.categoryScrollPosition,\r\n        behavior: 'smooth'\r\n      });\r\n    }\r\n  }\r\n\r\n  scrollCategoriesRight(): void {\r\n    const container = document.querySelector('.category-carousel-container') as HTMLElement;\r\n    if (container) {\r\n      const maxScroll = container.scrollWidth - container.clientWidth;\r\n      this.categoryScrollPosition = Math.min(maxScroll, this.categoryScrollPosition + this.categoryScrollStep);\r\n      container.scrollTo({\r\n        left: this.categoryScrollPosition,\r\n        behavior: 'smooth'\r\n      });\r\n    }\r\n  }\r\n\r\n  // Track by function for better performance\r\n  trackByBookId(index: number, book: Book): string {\r\n    return book.id || index.toString();\r\n  }\r\n\r\n  // Handle successful image load\r\n  onImageLoad(event: Event): void {\r\n    const target = event.target as HTMLImageElement;\r\n    target.classList.add('loaded');\r\n    target.style.opacity = '1';\r\n    console.log('Image loaded successfully:', target.src);\r\n  }\r\n}\r\n", "<!-- Hero Section -->\r\n<section id=\"home\" class=\"hero-section\">\r\n  <div class=\"hero-content\">\r\n    <h1>Welcome to Readify</h1>\r\n    <p>Discover your next favorite book from our vast collection</p>\r\n    <div class=\"hero-buttons\">\r\n      <button class=\"btn-primary\" routerLink=\"/search\">Browse Books</button>\r\n      <button class=\"btn-secondary\" routerLink=\"/login\">Sign In</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"hero-image\">\r\n    <img src=\"https://images.unsplash.com/photo-1481627834876-b7833e8f5570?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80\" alt=\"Books\">\r\n  </div>\r\n  \r\n  <!-- Scroll indicator -->\r\n  <div class=\"scroll-indicator\">\r\n    <div class=\"scroll-arrow\">\r\n      <span>↓</span>\r\n    </div>\r\n    <p>Scroll to explore</p>\r\n  </div>\r\n</section>\r\n\r\n<!-- Categories Section -->\r\n<section id=\"categories\" class=\"categories-section\">\r\n  <div class=\"container\">\r\n    <div class=\"section-header\">\r\n      <h2>\r\n        <i class=\"fas fa-tags me-2\"></i>\r\n        Browse by Category\r\n      </h2>\r\n      <p class=\"section-subtitle\">Explore our diverse collection of books across different genres</p>\r\n    </div>\r\n    \r\n    <div class=\"category-carousel\">\r\n      <button \r\n        class=\"carousel-arrow carousel-arrow-left\" \r\n        (click)=\"scrollCategoriesLeft()\"\r\n        [disabled]=\"categoryScrollPosition <= 0\"\r\n      >\r\n        <i class=\"fas fa-chevron-left\"></i>\r\n      </button>\r\n      \r\n      <div class=\"category-carousel-container\">\r\n        <div class=\"category-items\">\r\n          <div *ngFor=\"let category of categories\" \r\n               class=\"category-card clickable\" \r\n               [attr.data-category-id]=\"category.id\"\r\n               (click)=\"onCategoryClick(category)\">\r\n            <div class=\"category-icon\">\r\n              {{ category.icon || '📚' }}\r\n            </div>\r\n            <h3>{{ category.displayName }}</h3>\r\n            <p class=\"category-description\">{{ category.description }}</p>\r\n            <div class=\"category-overlay\">\r\n              <i class=\"fas\" [class.fa-arrow-right]=\"category.id !== 'more'\" [class.fa-th-large]=\"category.id === 'more'\"></i>\r\n              <span>{{ category.id === 'more' ? 'View All' : 'Explore' }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <button \r\n        class=\"carousel-arrow carousel-arrow-right\" \r\n        (click)=\"scrollCategoriesRight()\"\r\n      >\r\n        <i class=\"fas fa-chevron-right\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<!-- Featured Books Section -->\r\n<section id=\"featured\" class=\"featured-section\">\r\n  <div class=\"container\">\r\n    <div class=\"section-header\">\r\n      <h2>Featured Books</h2>\r\n      <div class=\"header-actions\">\r\n        <button class=\"refresh-btn\" (click)=\"loadBooks()\" [disabled]=\"isLoading\">\r\n          <i class=\"fas fa-sync-alt\" [class.fa-spin]=\"isLoading\"></i> Refresh\r\n        </button>\r\n        <button class=\"view-more-btn\" routerLink=\"/search\">Show More →</button>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Loading State -->\r\n    <div *ngIf=\"isLoading\" class=\"loading-state\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Loading featured books...</p>\r\n    </div>\r\n    \r\n    <!-- Books Grid -->\r\n    <div *ngIf=\"!isLoading\" class=\"books-grid\">\r\n      <div *ngFor=\"let book of featuredBooks; trackBy: trackByBookId\" class=\"book-card\" [routerLink]=\"['/books', book.id]\">\r\n        <div class=\"book-cover\">\r\n          <div class=\"image-container\">\r\n            <img \r\n              [src]=\"book.coverImage\" \r\n              [alt]=\"book.title\" \r\n              (error)=\"onImageError($event)\"\r\n              (load)=\"onImageLoad($event)\"\r\n              loading=\"lazy\"\r\n              class=\"book-image\"\r\n              [style.display]=\"'block'\"\r\n            />\r\n            <div class=\"image-placeholder\" *ngIf=\"!book.coverImage\">\r\n              <i class=\"fas fa-book fa-3x\"></i>\r\n              <p>{{ book.title }}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"book-overlay\">\r\n            <button \r\n              class=\"quick-view-btn\"\r\n              (click)=\"quickViewBook(book, $event)\"\r\n              title=\"View book details\"\r\n            >\r\n              <i class=\"fas fa-eye\"></i>\r\n              Quick View\r\n            </button>\r\n            <button \r\n              class=\"add-to-cart-btn\"\r\n              (click)=\"addToCart(book, $event)\"\r\n              [disabled]=\"book.id && isInCart(book.id)\"\r\n              [class.btn-success]=\"book.id && isInCart(book.id)\"\r\n              [title]=\"(book.id && isInCart(book.id)) ? 'Already in cart' : 'Add to cart'\"\r\n            >\r\n              <i class=\"fas\" [class.fa-shopping-cart]=\"!book.id || !isInCart(book.id)\" [class.fa-check]=\"book.id && isInCart(book.id)\"></i>\r\n              {{ (book.id && isInCart(book.id)) ? 'In Cart' : 'Add to Cart' }}\r\n            </button>\r\n          </div>\r\n          <div class=\"book-badges\">\r\n            <span *ngIf=\"book.isFeatured\" class=\"badge featured\">Featured</span>\r\n            <span *ngIf=\"book.isBestseller\" class=\"badge bestseller\">Bestseller</span>\r\n            <span *ngIf=\"book.isNew\" class=\"badge new\">New</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"book-info\">\r\n          <h3 class=\"book-title\">{{ book.title }}</h3>\r\n          <p class=\"book-author\">by {{ book.author }}</p>\r\n          <p class=\"book-category\">{{ book.category }}</p>\r\n          <div class=\"book-rating\" *ngIf=\"book.rating > 0\">\r\n            <div class=\"stars\">\r\n              <span *ngFor=\"let star of getRatingStars(book.rating)\" \r\n                    class=\"star\" \r\n                    [class.full]=\"star === 'full'\"\r\n                    [class.half]=\"star === 'half'\"\r\n                    [class.empty]=\"star === 'empty'\">★</span>\r\n            </div>\r\n            <span class=\"rating-text\">({{ book.rating }})</span>\r\n          </div>\r\n          <div class=\"book-price\">\r\n            <span class=\"current-price\">{{ book.price | priceFormat }}</span>\r\n            <span *ngIf=\"book.originalPrice && book.originalPrice > book.price\" class=\"original-price\">{{ book.originalPrice | priceFormat }}</span>\r\n          </div>\r\n          \r\n          <!-- Add to Cart Button -->\r\n          <div class=\"book-actions\">\r\n            <button \r\n              class=\"btn btn-primary btn-sm\"\r\n              (click)=\"addToCart(book, $event)\"\r\n              [disabled]=\"book.id && isInCart(book.id)\"\r\n              [class.btn-success]=\"book.id && isInCart(book.id)\"\r\n            >\r\n              <i class=\"fas\" [class.fa-shopping-cart]=\"!book.id || !isInCart(book.id)\" [class.fa-check]=\"book.id && isInCart(book.id)\"></i>\r\n              {{ (book.id && isInCart(book.id)) ? 'In Cart' : 'Add to Cart' }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"section-footer\" *ngIf=\"!isLoading\">\r\n      <p class=\"more-text\">Discover hundreds more books in our collection</p>\r\n      <button class=\"explore-btn\" routerLink=\"/search\">Show All Featured Books</button>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<!-- Bestsellers Section -->\r\n<section id=\"bestsellers\" class=\"bestsellers-section\">\r\n  <div class=\"container\">\r\n    <div class=\"section-header\">\r\n      <h2>Bestsellers</h2>\r\n      <button class=\"view-more-btn\" routerLink=\"/books\">Show More →</button>\r\n    </div>\r\n    <div class=\"books-row\">\r\n      <div *ngFor=\"let book of bestsellerBooks\" class=\"book-card-small\" [routerLink]=\"['/books', book.id]\">\r\n        <!-- ...existing code... -->\r\n        <img \r\n          [src]=\"book.coverImage\" \r\n          [alt]=\"book.title\" \r\n          (error)=\"onImageError($event)\"\r\n          loading=\"lazy\"\r\n          style=\"min-height: 100px; background: #f8f9fa;\"\r\n        />\r\n        <div class=\"book-details\">\r\n          <h4>{{ book.title }}</h4>\r\n          <p>{{ book.author }}</p>\r\n          <div class=\"rating-price\">\r\n            <div class=\"stars\">\r\n              <span *ngFor=\"let star of getRatingStars(book.rating)\" \r\n                    class=\"star\" \r\n                    [class.full]=\"star === 'full'\"\r\n                    [class.half]=\"star === 'half'\"\r\n                    [class.empty]=\"star === 'empty'\">★</span>\r\n            </div>\r\n            <span class=\"price\">{{ book.price | priceFormat }}</span>\r\n          </div>\r\n          <button \r\n            class=\"add-to-cart-btn-small\"\r\n            (click)=\"addToCart(book, $event)\"\r\n            [disabled]=\"book.id && isInCart(book.id)\"\r\n            [class.btn-success]=\"book.id && isInCart(book.id)\"\r\n            [title]=\"(book.id && isInCart(book.id)) ? 'Already in cart' : 'Add to cart'\"\r\n          >\r\n            <i class=\"fas\" [class.fa-shopping-cart]=\"!book.id || !isInCart(book.id)\" [class.fa-check]=\"book.id && isInCart(book.id)\"></i>\r\n            {{ (book.id && isInCart(book.id)) ? 'In Cart' : 'Add to Cart' }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"section-footer\">\r\n      <p class=\"more-text\">📈 Top-selling books loved by readers worldwide</p>\r\n      <button class=\"explore-btn\" routerLink=\"/search\">Show All Bestsellers</button>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<!-- New Arrivals Section -->\r\n<section id=\"new-arrivals\" class=\"new-arrivals-section\">\r\n  <div class=\"container\">\r\n    <div class=\"section-header\">\r\n      <h2>New Arrivals</h2>\r\n      <button class=\"view-more-btn\" routerLink=\"/books\">Show More →</button>\r\n    </div>\r\n    <div class=\"books-grid\">\r\n      <div *ngFor=\"let book of newArrivals\" class=\"book-card\" [routerLink]=\"['/books', book.id]\">\r\n        <!-- ...existing code... -->\r\n        <div class=\"book-cover\">\r\n          <img \r\n            [src]=\"book.coverImage\" \r\n            [alt]=\"book.title\" \r\n            (error)=\"onImageError($event)\"\r\n            loading=\"lazy\"\r\n            style=\"min-height: 300px; background: #f8f9fa;\"\r\n          />\r\n          <div class=\"book-overlay\">\r\n            <button \r\n              class=\"quick-view-btn\"\r\n              (click)=\"quickViewBook(book, $event)\"\r\n              title=\"View book details\"\r\n            >\r\n              <i class=\"fas fa-eye\"></i>\r\n              Quick View\r\n            </button>\r\n            <button \r\n              class=\"add-to-cart-btn\"\r\n              (click)=\"addToCart(book, $event)\"\r\n              [disabled]=\"book.id && isInCart(book.id)\"\r\n              [class.btn-success]=\"book.id && isInCart(book.id)\"\r\n              [title]=\"(book.id && isInCart(book.id)) ? 'Already in cart' : 'Add to cart'\"\r\n            >\r\n              <i class=\"fas\" [class.fa-shopping-cart]=\"!book.id || !isInCart(book.id)\" [class.fa-check]=\"book.id && isInCart(book.id)\"></i>\r\n              {{ (book.id && isInCart(book.id)) ? 'In Cart' : 'Add to Cart' }}\r\n            </button>\r\n          </div>\r\n          <div class=\"book-badges\">\r\n            <span class=\"badge new\">New Arrival</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"book-info\">\r\n          <h3 class=\"book-title\">{{ book.title }}</h3>\r\n          <p class=\"book-author\">by {{ book.author }}</p>\r\n          <div class=\"book-rating\">\r\n            <div class=\"stars\">\r\n              <span *ngFor=\"let star of getRatingStars(book.rating)\" \r\n                    class=\"star\" \r\n                    [class.full]=\"star === 'full'\"\r\n                    [class.half]=\"star === 'half'\"\r\n                    [class.empty]=\"star === 'empty'\">★</span>\r\n            </div>\r\n            <span class=\"rating-text\">({{ book.rating }})</span>\r\n          </div>\r\n          <div class=\"book-price\">\r\n            <span class=\"current-price\">{{ book.price | priceFormat }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"section-footer\">\r\n      <p class=\"more-text\">✨ Fresh releases and latest additions to our library</p>\r\n      <button class=\"explore-btn\" routerLink=\"/search\">Show All New Arrivals</button>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<!-- Newsletter Section -->\r\n<section class=\"newsletter-section\">\r\n  <div class=\"container\">\r\n    <div class=\"newsletter-content\">\r\n      <h2>Stay Updated</h2>\r\n      <p>Get the latest book recommendations and exclusive offers</p>\r\n      <div class=\"newsletter-form\">\r\n        <input type=\"email\" placeholder=\"Enter your email address\">\r\n        <button class=\"btn-primary\">Subscribe</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n", "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../core/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  templateUrl: './login.html',\r\n  styleUrl: './login.scss'\r\n})\r\nexport class LoginComponent {\r\n  email = '';\r\n  password = '';\r\n  firstName = '';\r\n  lastName = '';\r\n  isRegistering = false;\r\n  isLoading = false;\r\n  errorMessage = '';\r\n  successMessage = '';\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  async onSubmit() {\r\n    if (!this.email || !this.password) {\r\n      this.errorMessage = 'Please fill in all required fields.';\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    this.errorMessage = '';\r\n    this.successMessage = '';\r\n\r\n    try {\r\n      if (this.isRegistering) {\r\n        await this.authService.register(this.email, this.password, this.firstName, this.lastName);\r\n        this.successMessage = 'Account created successfully! Welcome to Readify!';\r\n        setTimeout(() => {\r\n          this.router.navigate(['/']);\r\n        }, 2000);\r\n      } else {\r\n        await this.authService.signIn(this.email, this.password);\r\n        this.successMessage = 'Welcome back!';\r\n        setTimeout(() => {\r\n          this.router.navigate(['/']);\r\n        }, 1000);\r\n      }\r\n    } catch (error: any) {\r\n      this.errorMessage = error.message;\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  toggleMode() {\r\n    this.isRegistering = !this.isRegistering;\r\n    this.errorMessage = '';\r\n    this.successMessage = '';\r\n    this.email = '';\r\n    this.password = '';\r\n    this.firstName = '';\r\n    this.lastName = '';\r\n  }\r\n}", "<div class=\"login-container\">\r\n  <form (ngSubmit)=\"onSubmit()\" #loginForm=\"ngForm\">\r\n    <h2>{{ isRegistering ? 'Hesap Oluştur' : 'Giriş Yap' }}</h2>\r\n    \r\n    <!-- Error Message -->\r\n    <div *ngIf=\"errorMessage\" class=\"error-message\">\r\n      <span class=\"error-icon\">⚠️</span>\r\n      {{ errorMessage }}\r\n    </div>\r\n    \r\n    <!-- Success Message -->\r\n    <div *ngIf=\"successMessage\" class=\"success-message\">\r\n      <span class=\"success-icon\">✅</span>\r\n      {{ successMessage }}\r\n    </div>\r\n\r\n    <!-- Registration Fields -->\r\n    <div *ngIf=\"isRegistering\" class=\"name-fields\">\r\n      <div class=\"field-group\">\r\n        <label for=\"firstName\">Ad</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"firstName\" \r\n          name=\"firstName\" \r\n          [(ngModel)]=\"firstName\"\r\n          placeholder=\"Adınız\" \r\n        />\r\n      </div>\r\n      <div class=\"field-group\">\r\n        <label for=\"lastName\">Soyad</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"lastName\" \r\n          name=\"lastName\" \r\n          [(ngModel)]=\"lastName\"\r\n          placeholder=\"Soyadınız\" \r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Email Field -->\r\n    <label for=\"email\">E-posta</label>\r\n    <input \r\n      type=\"email\" \r\n      id=\"email\" \r\n      name=\"email\" \r\n      [(ngModel)]=\"email\"\r\n      placeholder=\"ornek@email.com\" \r\n      required \r\n    />\r\n    \r\n    <!-- Password Field -->\r\n    <label for=\"password\">Şifre</label>\r\n    <input \r\n      type=\"password\" \r\n      id=\"password\" \r\n      name=\"password\" \r\n      [(ngModel)]=\"password\"\r\n      placeholder=\"Şifrenizi girin\" \r\n      required \r\n      [minlength]=\"6\"\r\n    />\r\n\r\n    <!-- Submit Button -->\r\n    <button \r\n      type=\"submit\" \r\n      [disabled]=\"isLoading\"\r\n      class=\"submit-btn\"\r\n    >\r\n      <span *ngIf=\"isLoading\" class=\"loading-spinner\">⏳</span>\r\n      {{ isLoading ? 'İşlem yapılıyor...' : (isRegistering ? 'Hesap Oluştur' : 'Giriş Yap') }}\r\n    </button>\r\n\r\n    <!-- Toggle Mode -->\r\n    <div class=\"form-footer\">\r\n      <p>\r\n        {{ isRegistering ? 'Zaten hesabınız var mı?' : 'Hesabınız yok mu?' }}\r\n        <button type=\"button\" class=\"toggle-btn\" (click)=\"toggleMode()\">\r\n          {{ isRegistering ? 'Giriş Yap' : 'Hesap Oluştur' }}\r\n        </button>\r\n      </p>\r\n    </div>\r\n  </form>\r\n</div>\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CartService, CartItem } from '../../core/services/cart.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule],\r\n  templateUrl: './cart.html',\r\n  styleUrls: ['./cart.scss']\r\n})\r\nexport class CartComponent implements OnInit {\r\n  cartItems$: Observable<CartItem[]>;\r\n  \r\n  constructor(private cartService: CartService) {\r\n    this.cartItems$ = this.cartService.cart$;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  // Remove item from cart\r\n  async removeItem(bookId: string): Promise<void> {\r\n    await this.cartService.removeFromCart(bookId);\r\n  }\r\n\r\n  // Update quantity\r\n  async updateQuantity(bookId: string, quantity: number): Promise<void> {\r\n    await this.cartService.updateQuantity(bookId, quantity);\r\n  }\r\n\r\n  // Clear entire cart\r\n  async clearCart(): Promise<void> {\r\n    if (confirm('Are you sure you want to clear your cart?')) {\r\n      await this.cartService.clearCart();\r\n    }\r\n  }\r\n\r\n  // Get total price\r\n  getTotalPrice(): number {\r\n    return this.cartService.getTotalPrice();\r\n  }\r\n\r\n  // Get total items\r\n  getTotalItems(): number {\r\n    return this.cartService.getTotalItems();\r\n  }\r\n\r\n  // Format price for display\r\n  formatPrice(price: number): string {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD'\r\n    }).format(price);\r\n  }\r\n}", "<div class=\"cart-container\">\r\n  <div class=\"container\">\r\n    <div class=\"cart-header\">\r\n      <h2>\r\n        <i class=\"fas fa-shopping-cart me-2\"></i>\r\n        Your Shopping Cart\r\n      </h2>\r\n    </div>\r\n\r\n    <!-- Empty Cart -->\r\n    <div *ngIf=\"(cartItems$ | async)?.length === 0\" class=\"empty-cart\">\r\n      <i class=\"fas fa-shopping-cart empty-icon\"></i>\r\n      <h3>Your cart is empty</h3>\r\n      <p>Start adding some books to your cart!</p>\r\n      <button class=\"btn btn-primary\" routerLink=\"/books\">\r\n        <i class=\"fas fa-book me-2\"></i>\r\n        Browse Books\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Cart Items -->\r\n    <div *ngIf=\"(cartItems$ | async)?.length! > 0\" class=\"cart-content\">\r\n      <div class=\"cart-items\">\r\n        <div *ngFor=\"let item of cartItems$ | async\" class=\"cart-item\">\r\n          <!-- Book Image -->\r\n          <div class=\"item-image\">\r\n            <img [src]=\"item.book.coverImage || 'assets/images/no-book-cover.jpg'\" \r\n                 [alt]=\"item.book.title\">\r\n          </div>\r\n\r\n          <!-- Book Details -->\r\n          <div class=\"item-details\">\r\n            <h4 class=\"item-title\">{{ item.book.title }}</h4>\r\n            <p class=\"item-author\">{{ item.book.author }}</p>\r\n            <p class=\"item-price\">{{ formatPrice(item.book.price) }}</p>\r\n          </div>\r\n\r\n          <!-- Quantity Controls -->\r\n          <div class=\"quantity-controls\">\r\n            <button \r\n              class=\"quantity-btn\" \r\n              (click)=\"item.book.id && updateQuantity(item.book.id, item.quantity - 1)\"\r\n              [disabled]=\"item.quantity <= 1\"\r\n            >\r\n              <i class=\"fas fa-minus\"></i>\r\n            </button>\r\n            <span class=\"quantity\">{{ item.quantity }}</span>\r\n            <button \r\n              class=\"quantity-btn\" \r\n              (click)=\"item.book.id && updateQuantity(item.book.id, item.quantity + 1)\"\r\n            >\r\n              <i class=\"fas fa-plus\"></i>\r\n            </button>\r\n          </div>\r\n\r\n          <!-- Item Total -->\r\n          <div class=\"item-total\">\r\n            {{ formatPrice(item.book.price * item.quantity) }}\r\n          </div>\r\n\r\n          <!-- Remove Button -->\r\n          <button \r\n            class=\"remove-btn\"\r\n            (click)=\"item.book.id && removeItem(item.book.id)\"\r\n            title=\"Remove from cart\"\r\n          >\r\n            <i class=\"fas fa-trash\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Cart Summary -->\r\n      <div class=\"cart-summary\">\r\n        <div class=\"summary-item\">\r\n          <span>Total Items:</span>\r\n          <span>{{ getTotalItems() }}</span>\r\n        </div>\r\n        <div class=\"summary-item total\">\r\n          <span>Total Price:</span>\r\n          <span class=\"total-price\">{{ formatPrice(getTotalPrice()) }}</span>\r\n        </div>\r\n        \r\n        <div class=\"cart-actions\">\r\n          <button class=\"btn btn-outline-danger\" (click)=\"clearCart()\">\r\n            <i class=\"fas fa-trash me-2\"></i>\r\n            Clear Cart\r\n          </button>\r\n          <button class=\"btn btn-primary\" routerLink=\"/checkout\">\r\n            <i class=\"fas fa-credit-card me-2\"></i>\r\n            Proceed to Checkout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>", "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-admin-layout',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule],\r\n  template: `\r\n    <div class=\"admin-layout\">\r\n      <!-- Sidebar Navigation -->\r\n      <nav class=\"admin-sidebar\">\r\n        <div class=\"sidebar-header\">\r\n          <h2>\r\n            <span class=\"logo-icon\">📚</span>\r\n            Readify Admin\r\n          </h2>\r\n        </div>\r\n        \r\n        <ul class=\"sidebar-menu\">\r\n          <li>\r\n            <a routerLink=\"/admin/dashboard\" routerLinkActive=\"active\">\r\n              <span class=\"menu-icon\">📊</span>\r\n              Dashboard\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a routerLink=\"/admin/books\" routerLinkActive=\"active\">\r\n              <span class=\"menu-icon\">📚</span>\r\n              Book Management\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a routerLink=\"/admin/users\" routerLinkActive=\"active\">\r\n              <span class=\"menu-icon\">👥</span>\r\n              User Management\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a routerLink=\"/admin/analytics\" routerLinkActive=\"active\">\r\n              <span class=\"menu-icon\">📈</span>\r\n              Analytics\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a routerLink=\"/admin/settings\" routerLinkActive=\"active\">\r\n              <span class=\"menu-icon\">⚙️</span>\r\n              Settings\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        \r\n        <div class=\"sidebar-footer\">\r\n          <a href=\"/\" class=\"back-to-site\">\r\n            <span class=\"menu-icon\">🏠</span>\r\n            Back to Site\r\n          </a>\r\n        </div>\r\n      </nav>\r\n\r\n      <!-- Main Content Area -->\r\n      <main class=\"admin-main\">\r\n        <!-- Header -->\r\n        <header class=\"admin-header\">\r\n          <div class=\"header-content\">\r\n            <h1>Admin Panel</h1>\r\n            <div class=\"header-actions\">\r\n              <button class=\"notification-btn\" title=\"Notifications\">\r\n                <span class=\"notification-icon\">🔔</span>\r\n                <span class=\"notification-badge\">3</span>\r\n              </button>\r\n              <div class=\"admin-profile\">\r\n                <img src=\"https://via.placeholder.com/40x40\" alt=\"Admin\" class=\"profile-avatar\">\r\n                <span class=\"profile-name\">Admin User</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        <!-- Page Content -->\r\n        <div class=\"admin-content\">\r\n          <router-outlet></router-outlet>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    /* Admin Layout */\r\n    .admin-layout {\r\n      display: flex;\r\n      min-height: 100vh;\r\n      background-color: #f8fafc;\r\n    }\r\n\r\n    /* Sidebar */\r\n    .admin-sidebar {\r\n      width: 260px;\r\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n      color: white;\r\n      display: flex;\r\n      flex-direction: column;\r\n      position: fixed;\r\n      height: 100vh;\r\n      left: 0;\r\n      top: 0;\r\n      z-index: 1000;\r\n      box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    .sidebar-header {\r\n      padding: 1.5rem;\r\n      border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n    }\r\n\r\n    .sidebar-header h2 {\r\n      margin: 0;\r\n      font-size: 1.4rem;\r\n      font-weight: 600;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.5rem;\r\n    }\r\n\r\n    .logo-icon {\r\n      font-size: 1.8rem;\r\n    }\r\n\r\n    .sidebar-menu {\r\n      flex: 1;\r\n      list-style: none;\r\n      padding: 1rem 0;\r\n      margin: 0;\r\n    }\r\n\r\n    .sidebar-menu li {\r\n      margin: 0;\r\n    }\r\n\r\n    .sidebar-menu a {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.75rem;\r\n      padding: 0.875rem 1.5rem;\r\n      color: rgba(255, 255, 255, 0.8);\r\n      text-decoration: none;\r\n      transition: all 0.3s ease;\r\n      border-left: 3px solid transparent;\r\n    }\r\n\r\n    .sidebar-menu a:hover {\r\n      background-color: rgba(255, 255, 255, 0.1);\r\n      color: white;\r\n      border-left-color: rgba(255, 255, 255, 0.5);\r\n    }\r\n\r\n    .sidebar-menu a.active {\r\n      background-color: rgba(255, 255, 255, 0.15);\r\n      color: white;\r\n      border-left-color: white;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .menu-icon {\r\n      font-size: 1.1rem;\r\n      width: 20px;\r\n      text-align: center;\r\n    }\r\n\r\n    .sidebar-footer {\r\n      padding: 1.5rem;\r\n      border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n    }\r\n\r\n    .back-to-site {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.75rem;\r\n      padding: 0.875rem;\r\n      color: rgba(255, 255, 255, 0.8);\r\n      text-decoration: none;\r\n      border-radius: 8px;\r\n      transition: all 0.3s ease;\r\n    }\r\n\r\n    .back-to-site:hover {\r\n      background-color: rgba(255, 255, 255, 0.1);\r\n      color: white;\r\n    }\r\n\r\n    /* Main Content */\r\n    .admin-main {\r\n      flex: 1;\r\n      margin-left: 260px;\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n\r\n    /* Header */\r\n    .admin-header {\r\n      background: white;\r\n      padding: 1rem 2rem;\r\n      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);\r\n      border-bottom: 1px solid #e2e8f0;\r\n    }\r\n\r\n    .header-content {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n\r\n    .admin-header h1 {\r\n      margin: 0;\r\n      color: #1a202c;\r\n      font-size: 1.75rem;\r\n      font-weight: 600;\r\n    }\r\n\r\n    .header-actions {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 1.5rem;\r\n    }\r\n\r\n    .notification-btn {\r\n      position: relative;\r\n      background: none;\r\n      border: none;\r\n      font-size: 1.5rem;\r\n      cursor: pointer;\r\n      padding: 0.5rem;\r\n      border-radius: 50%;\r\n      transition: background-color 0.3s ease;\r\n    }\r\n\r\n    .notification-btn:hover {\r\n      background-color: #f7fafc;\r\n    }\r\n\r\n    .notification-badge {\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n      background: #e53e3e;\r\n      color: white;\r\n      font-size: 0.75rem;\r\n      padding: 0.125rem 0.375rem;\r\n      border-radius: 10px;\r\n      min-width: 18px;\r\n      text-align: center;\r\n    }\r\n\r\n    .admin-profile {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.75rem;\r\n      padding: 0.5rem;\r\n      border-radius: 8px;\r\n      transition: background-color 0.3s ease;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .admin-profile:hover {\r\n      background-color: #f7fafc;\r\n    }\r\n\r\n    .profile-avatar {\r\n      width: 40px;\r\n      height: 40px;\r\n      border-radius: 50%;\r\n      object-fit: cover;\r\n    }\r\n\r\n    .profile-name {\r\n      font-weight: 500;\r\n      color: #2d3748;\r\n    }\r\n\r\n    /* Content */\r\n    .admin-content {\r\n      flex: 1;\r\n      padding: 0;\r\n    }\r\n\r\n    /* Responsive Design */\r\n    @media (max-width: 1024px) {\r\n      .admin-sidebar {\r\n        width: 220px;\r\n      }\r\n      \r\n      .admin-main {\r\n        margin-left: 220px;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      .admin-sidebar {\r\n        transform: translateX(-100%);\r\n        transition: transform 0.3s ease;\r\n      }\r\n      \r\n      .admin-main {\r\n        margin-left: 0;\r\n      }\r\n      \r\n      .admin-header {\r\n        padding: 1rem;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class AdminLayoutComponent {\r\n}\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AuthService } from '../../../core/services/auth.service';\r\nimport { BookService } from '../../../core/services/book.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-dashboard',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule],\r\n  templateUrl: './admin-dashboard.html',\r\n  styleUrls: ['./admin-dashboard.scss']\r\n})\r\nexport class AdminDashboardComponent implements OnInit {\r\n  \r\n  stats = {\r\n    totalBooks: 0,\r\n    totalUsers: 0,\r\n    totalOrders: 0,\r\n    revenue: 0\r\n  };\r\n\r\n  recentActivities: any[] = [];\r\n  topBooks: any[] = [];\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private bookService: BookService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loadDashboardData();\r\n  }\r\n\r\n  loadDashboardData() {\r\n    // Load statistics and recent activities\r\n    this.stats = {\r\n      totalBooks: 1247,\r\n      totalUsers: 8950,\r\n      totalOrders: 342,\r\n      revenue: 15680\r\n    };\r\n\r\n    this.recentActivities = [\r\n      { action: 'New book added', item: 'The Midnight Library', time: '2 hours ago', type: 'book' },\r\n      { action: 'User registered', item: 'john.doe@email.com', time: '3 hours ago', type: 'user' },\r\n      { action: 'Order completed', item: 'Order #12845', time: '5 hours ago', type: 'order' },\r\n      { action: 'Book updated', item: 'Dune - Frank Herbert', time: '1 day ago', type: 'book' },\r\n      { action: 'New review', item: '5-star review for \"1984\"', time: '1 day ago', type: 'review' }\r\n    ];\r\n\r\n    this.topBooks = [\r\n      { title: 'The Great Gatsby', sales: 156, revenue: 2184 },\r\n      { title: 'To Kill a Mockingbird', sales: 134, revenue: 1876 },\r\n      { title: '1984', sales: 128, revenue: 1792 },\r\n      { title: 'Dune', sales: 98, revenue: 1568 },\r\n      { title: 'The Hobbit', sales: 87, revenue: 1044 }\r\n    ];\r\n  }\r\n\r\n  getActivityIcon(type: string): string {\r\n    switch (type) {\r\n      case 'book': return '📚';\r\n      case 'user': return '👤';\r\n      case 'order': return '🛒';\r\n      case 'review': return '⭐';\r\n      default: return '📝';\r\n    }\r\n  }\r\n}\r\n", "<!-- Dashboard Content -->\r\n<div class=\"dashboard-content\">\r\n  <!-- Stats Cards -->\r\n  <div class=\"stats-grid\">\r\n    <div class=\"stat-card\">\r\n      <div class=\"stat-icon books\">📚</div>\r\n      <div class=\"stat-info\">\r\n        <h3>{{ stats.totalBooks }}</h3>\r\n        <p>Total Books</p>\r\n      </div>\r\n      <div class=\"stat-trend positive\">+12%</div>\r\n    </div>\r\n    \r\n    <div class=\"stat-card\">\r\n      <div class=\"stat-icon users\">👥</div>\r\n      <div class=\"stat-info\">\r\n        <h3>{{ stats.totalUsers }}</h3>\r\n        <p>Total Users</p>\r\n      </div>\r\n      <div class=\"stat-trend positive\">+8%</div>\r\n    </div>\r\n    \r\n    <div class=\"stat-card\">\r\n      <div class=\"stat-icon orders\">🛒</div>\r\n      <div class=\"stat-info\">\r\n        <h3>{{ stats.totalOrders }}</h3>\r\n        <p>Total Orders</p>\r\n      </div>\r\n      <div class=\"stat-trend positive\">+15%</div>\r\n    </div>\r\n    \r\n    <div class=\"stat-card\">\r\n      <div class=\"stat-icon revenue\">💰</div>\r\n      <div class=\"stat-info\">\r\n        <h3>${{ stats.revenue }}</h3>\r\n        <p>Revenue</p>\r\n      </div>\r\n      <div class=\"stat-trend positive\">+23%</div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Dashboard Grid -->\r\n  <div class=\"dashboard-grid\">\r\n    <!-- Recent Activities -->\r\n    <div class=\"dashboard-card\">\r\n      <div class=\"card-header\">\r\n        <h3>Recent Activities</h3>\r\n        <button class=\"btn-link\">View All</button>\r\n      </div>\r\n      <div class=\"card-content\">\r\n        <div class=\"activity-list\">\r\n          <div class=\"activity-item\" *ngFor=\"let activity of recentActivities\">\r\n            <div class=\"activity-icon\">{{ getActivityIcon(activity.type) }}</div>\r\n            <div class=\"activity-details\">\r\n              <p class=\"activity-action\">{{ activity.action }}</p>\r\n              <p class=\"activity-item-name\">{{ activity.item }}</p>\r\n              <span class=\"activity-time\">{{ activity.time }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Top Selling Books -->\r\n    <div class=\"dashboard-card\">\r\n      <div class=\"card-header\">\r\n        <h3>Top Selling Books</h3>\r\n        <button class=\"btn-link\">View All</button>\r\n      </div>\r\n      <div class=\"card-content\">\r\n        <div class=\"top-books-list\">\r\n          <div class=\"book-item\" *ngFor=\"let book of topBooks; let i = index\">\r\n            <div class=\"book-rank\">{{ i + 1 }}</div>\r\n            <div class=\"book-details\">\r\n              <h4>{{ book.title }}</h4>\r\n              <p>{{ book.sales }} sales • ${{ book.revenue }}</p>\r\n            </div>\r\n            <div class=\"book-progress\">\r\n              <div class=\"progress-bar\">\r\n                <div class=\"progress-fill\" [style.width.%]=\"(book.sales / 200) * 100\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Quick Actions -->\r\n    <div class=\"dashboard-card\">\r\n      <div class=\"card-header\">\r\n        <h3>Quick Actions</h3>\r\n      </div>\r\n      <div class=\"card-content\">\r\n        <div class=\"quick-actions\">\r\n          <button class=\"action-btn primary\" routerLink=\"/admin/books\">\r\n            <span class=\"action-icon\">➕</span>\r\n            Add New Book\r\n          </button>\r\n          <button class=\"action-btn secondary\" routerLink=\"/admin/users\">\r\n            <span class=\"action-icon\">👤</span>\r\n            Manage Users\r\n          </button>\r\n          <button class=\"action-btn accent\" routerLink=\"/admin/analytics\">\r\n            <span class=\"action-icon\">📊</span>\r\n            View Reports\r\n          </button>\r\n          <button class=\"action-btn warning\">\r\n            <span class=\"action-icon\">🔔</span>\r\n            Send Newsletter\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- System Status -->\r\n    <div class=\"dashboard-card\">\r\n      <div class=\"card-header\">\r\n        <h3>System Status</h3>\r\n      </div>\r\n      <div class=\"card-content\">\r\n        <div class=\"status-list\">\r\n          <div class=\"status-item\">\r\n            <div class=\"status-indicator online\"></div>\r\n            <span>Database Connection</span>\r\n            <span class=\"status-value\">Online</span>\r\n          </div>\r\n          <div class=\"status-item\">\r\n            <div class=\"status-indicator online\"></div>\r\n            <span>Payment Gateway</span>\r\n            <span class=\"status-value\">Active</span>\r\n          </div>\r\n          <div class=\"status-item\">\r\n            <div class=\"status-indicator warning\"></div>\r\n            <span>Email Service</span>\r\n            <span class=\"status-value\">Slow</span>\r\n          </div>\r\n          <div class=\"status-item\">\r\n            <div class=\"status-indicator online\"></div>\r\n            <span>CDN Status</span>\r\n            <span class=\"status-value\">Optimal</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { BookService, Book } from '../../../core/services/book.service';\r\nimport { OpenLibrarySearchComponent } from '../../open-library-search/open-library-search';\r\n\r\n@Component({\r\n  selector: 'app-book-management',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, OpenLibrarySearchComponent],\r\n  templateUrl: './book-management.html',\r\n  styleUrls: ['./book-management.scss']\r\n})\r\nexport class BookManagementComponent implements OnInit {\r\n  books: Book[] = [];\r\n  filteredBooks: Book[] = [];\r\n  bookForm: FormGroup;\r\n  isEditing = false;\r\n  editingBookId: string | null = null;\r\n  showAddForm = false;\r\n  showGoogleSearch = false;\r\n  searchTerm = '';\r\n  selectedCategory = '';\r\n  sortBy = 'title';\r\n  sortDirection = 'asc';\r\n  loading = false;\r\n  \r\n  categories = [\r\n    'Fiction',\r\n    'Non-Fiction',\r\n    'Mystery',\r\n    'Romance',\r\n    'Science Fiction',\r\n    'Fantasy',\r\n    'Biography',\r\n    'History',\r\n    'Self-Help',\r\n    'Business',\r\n    'Technology',\r\n    'Health',\r\n    'Travel',\r\n    'Children',\r\n    'Young Adult'\r\n  ];\r\n\r\n  constructor(\r\n    private bookService: BookService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    this.bookForm = this.fb.group({\r\n      title: ['', [Validators.required, Validators.minLength(2)]],\r\n      author: ['', [Validators.required, Validators.minLength(2)]],\r\n      isbn: ['', [Validators.pattern(/^\\d{10}(\\d{3})?$/)]],  // Made optional\r\n      price: [0, [Validators.required, Validators.min(0)]],  // Allow 0 for free books\r\n      category: ['', Validators.required],\r\n      description: ['', [Validators.required, Validators.minLength(10)]],\r\n      coverImage: ['', [Validators.required, Validators.pattern(/^https?:\\/\\/.+/)]],\r\n      stock: [0, [Validators.required, Validators.min(0)]],\r\n      isFeatured: [false],\r\n      isBestseller: [false],\r\n      isNew: [false],\r\n      isActive: [true]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadBooks();\r\n  }\r\n\r\n  async loadBooks() {\r\n    this.loading = true;\r\n    try {\r\n      await this.bookService.loadBooks();\r\n      this.bookService.books$.subscribe(books => {\r\n        this.books = books;\r\n        this.filterBooks();\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.error('Error loading books:', error);\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  filterBooks() {\r\n    this.filteredBooks = this.books.filter(book => {\r\n      const matchesSearch = book.title.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n                           book.author.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n                           (book.isbn && book.isbn.includes(this.searchTerm));\r\n      const matchesCategory = !this.selectedCategory || book.category === this.selectedCategory;\r\n      return matchesSearch && matchesCategory;\r\n    });\r\n    \r\n    this.sortBooks();\r\n  }\r\n\r\n  sortBooks() {\r\n    this.filteredBooks.sort((a, b) => {\r\n      let aValue = a[this.sortBy as keyof Book];\r\n      let bValue = b[this.sortBy as keyof Book];\r\n      \r\n      // Handle undefined values\r\n      if (aValue === undefined) aValue = '';\r\n      if (bValue === undefined) bValue = '';\r\n      \r\n      if (typeof aValue === 'string' && typeof bValue === 'string') {\r\n        aValue = aValue.toLowerCase();\r\n        bValue = bValue.toLowerCase();\r\n      }\r\n      \r\n      if (aValue < bValue) return this.sortDirection === 'asc' ? -1 : 1;\r\n      if (aValue > bValue) return this.sortDirection === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  onSearch() {\r\n    this.filterBooks();\r\n  }\r\n\r\n  onCategoryFilter() {\r\n    this.filterBooks();\r\n  }\r\n\r\n  onSort() {\r\n    this.sortBooks();\r\n  }\r\n\r\n  toggleSortDirection() {\r\n    this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\r\n    this.sortBooks();\r\n  }\r\n\r\n  showAddBookForm() {\r\n    this.showAddForm = true;\r\n    this.isEditing = false;\r\n    this.editingBookId = null;\r\n    this.bookForm.reset();\r\n  }\r\n\r\n  editBook(book: Book) {\r\n    this.showAddForm = true;\r\n    this.isEditing = true;\r\n    this.editingBookId = book.id || null;\r\n    this.bookForm.patchValue(book);\r\n  }\r\n\r\n  async deleteBook(book: Book) {\r\n    if (confirm(`Are you sure you want to delete \"${book.title}\"?`)) {\r\n      try {\r\n        await this.bookService.deleteBook(book.id!);\r\n        console.log('Book deleted:', book.title);\r\n      } catch (error) {\r\n        console.error('Error deleting book:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  async onSubmit() {\r\n    if (this.bookForm.valid) {\r\n      const bookData = this.bookForm.value;\r\n      \r\n      try {\r\n        if (this.isEditing && this.editingBookId) {\r\n          // Update existing book\r\n          const bookToUpdate = { ...bookData, id: this.editingBookId };\r\n          await this.bookService.updateBook(bookToUpdate);\r\n          console.log('Book updated');\r\n        } else {\r\n          // Add new book\r\n          const newBookId = await this.bookService.addBook(bookData);\r\n          console.log('Book added with ID:', newBookId);\r\n        }\r\n        \r\n        this.cancelForm();\r\n      } catch (error) {\r\n        console.error('Error saving book:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  cancelForm() {\r\n    this.showAddForm = false;\r\n    this.isEditing = false;\r\n    this.editingBookId = null;\r\n    this.bookForm.reset();\r\n  }\r\n\r\n  toggleBookStatus(book: Book, status: 'isFeatured' | 'isBestseller' | 'isNew') {\r\n    book[status] = !book[status];\r\n    // In a real app, this would save to the database\r\n    this.bookService.updateBook(book);\r\n    console.log(`${book.title} ${status} status:`, book[status]);\r\n  }\r\n\r\n  getFormFieldError(fieldName: string): string {\r\n    const field = this.bookForm.get(fieldName);\r\n    if (field && field.errors && field.touched) {\r\n      if (field.errors['required']) return `${fieldName} is required`;\r\n      if (field.errors['minlength']) return `${fieldName} is too short`;\r\n      if (field.errors['min']) return `${fieldName} must be greater than 0`;\r\n      if (field.errors['pattern']) return `Invalid ${fieldName} format`;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  showOpenLibrarySearch() {\r\n    this.showGoogleSearch = true;\r\n  }\r\n\r\n  hideOpenLibrarySearch() {\r\n    this.showGoogleSearch = false;\r\n  }\r\n}\r\n", "<div class=\"book-management\">\r\n  <div class=\"page-header\">\r\n    <h1>Book Management</h1>\r\n    <div class=\"header-actions\">\r\n      <button class=\"btn btn-secondary\" (click)=\"showOpenLibrarySearch()\" *ngIf=\"!showGoogleSearch\">\r\n        <span class=\"btn-icon\">🔍</span>\r\n        Search Open Library\r\n      </button>\r\n      <button class=\"btn btn-outline-secondary\" (click)=\"hideOpenLibrarySearch()\" *ngIf=\"showGoogleSearch\">\r\n        <span class=\"btn-icon\">❌</span>\r\n        Hide Open Library Search\r\n      </button>\r\n      <button class=\"btn btn-primary\" (click)=\"showAddBookForm()\">\r\n        <span class=\"btn-icon\">➕</span>\r\n        Add New Book\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Google Books Search Component -->\r\n  <div *ngIf=\"showGoogleSearch\" class=\"open-library-section\">\r\n    <app-open-library-search></app-open-library-search>\r\n  </div>\r\n\r\n  <!-- Filters and Search -->\r\n  <div class=\"filters-section\">\r\n    <div class=\"search-box\">\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Search books by title, author, or ISBN...\" \r\n        [(ngModel)]=\"searchTerm\"\r\n        (input)=\"onSearch()\"\r\n        class=\"search-input\">\r\n      <span class=\"search-icon\">🔍</span>\r\n    </div>\r\n    \r\n    <div class=\"filter-controls\">\r\n      <select [(ngModel)]=\"selectedCategory\" (change)=\"onCategoryFilter()\" class=\"filter-select\">\r\n        <option value=\"\">All Categories</option>\r\n        <option *ngFor=\"let category of categories\" [value]=\"category\">{{ category }}</option>\r\n      </select>\r\n      \r\n      <select [(ngModel)]=\"sortBy\" (change)=\"onSort()\" class=\"filter-select\">\r\n        <option value=\"title\">Sort by Title</option>\r\n        <option value=\"author\">Sort by Author</option>\r\n        <option value=\"price\">Sort by Price</option>\r\n        <option value=\"stock\">Sort by Stock</option>\r\n        <option value=\"createdAt\">Sort by Date Added</option>\r\n      </select>\r\n      \r\n      <button class=\"sort-direction-btn\" (click)=\"toggleSortDirection()\">\r\n        {{ sortDirection === 'asc' ? '↑' : '↓' }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Books Grid -->\r\n  <div class=\"books-grid\" *ngIf=\"!loading && filteredBooks.length > 0\">\r\n    <div class=\"book-card\" *ngFor=\"let book of filteredBooks\">\r\n      <div class=\"book-image\">\r\n        <img [src]=\"book.coverImage\" [alt]=\"book.title\" onerror=\"this.src='https://via.placeholder.com/200x300?text=No+Image'\">\r\n        <div class=\"book-badges\">\r\n          <span class=\"badge featured\" *ngIf=\"book.isFeatured\">Featured</span>\r\n          <span class=\"badge bestseller\" *ngIf=\"book.isBestseller\">Bestseller</span>\r\n          <span class=\"badge new-arrival\" *ngIf=\"book.isNew\">New</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"book-info\">\r\n        <h3 class=\"book-title\">{{ book.title }}</h3>\r\n        <p class=\"book-author\">by {{ book.author }}</p>\r\n        <p class=\"book-category\">{{ book.category }}</p>\r\n        <p class=\"book-isbn\">ISBN: {{ book.isbn }}</p>\r\n        <div class=\"book-stats\">\r\n          <span class=\"book-price\">${{ book.price }}</span>\r\n          <span class=\"book-stock\" [class.low-stock]=\"(book.stock || 0) < 10\">Stock: {{ book.stock || 0 }}</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"book-actions\">\r\n        <button class=\"btn btn-sm btn-secondary\" (click)=\"editBook(book)\">\r\n          <span class=\"btn-icon\">✏️</span>\r\n          Edit\r\n        </button>\r\n        <button class=\"btn btn-sm btn-danger\" (click)=\"deleteBook(book)\">\r\n          <span class=\"btn-icon\">🗑️</span>\r\n          Delete\r\n        </button>\r\n      </div>\r\n      \r\n      <div class=\"book-toggles\">\r\n        <label class=\"toggle-label\">\r\n          <input type=\"checkbox\" [checked]=\"book.isFeatured\" (change)=\"toggleBookStatus(book, 'isFeatured')\">\r\n          <span class=\"toggle-slider\"></span>\r\n          Featured\r\n        </label>\r\n        <label class=\"toggle-label\">\r\n          <input type=\"checkbox\" [checked]=\"book.isBestseller\" (change)=\"toggleBookStatus(book, 'isBestseller')\">\r\n          <span class=\"toggle-slider\"></span>\r\n          Bestseller\r\n        </label>\r\n        <label class=\"toggle-label\">\r\n          <input type=\"checkbox\" [checked]=\"book.isNew\" (change)=\"toggleBookStatus(book, 'isNew')\">\r\n          <span class=\"toggle-slider\"></span>\r\n          New Arrival\r\n        </label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Empty State -->\r\n  <div class=\"empty-state\" *ngIf=\"!loading && filteredBooks.length === 0\">\r\n    <div class=\"empty-icon\">📚</div>\r\n    <h3>No Books Found</h3>\r\n    <p *ngIf=\"searchTerm || selectedCategory\">Try adjusting your filters or search terms.</p>\r\n    <p *ngIf=\"!searchTerm && !selectedCategory\">Start by adding your first book to the inventory.</p>\r\n    <button class=\"btn btn-primary\" (click)=\"showAddBookForm()\">Add New Book</button>\r\n  </div>\r\n\r\n  <!-- Loading State -->\r\n  <div class=\"loading-state\" *ngIf=\"loading\">\r\n    <div class=\"spinner\"></div>\r\n    <p>Loading books...</p>\r\n  </div>\r\n</div>\r\n\r\n<!-- Add/Edit Book Modal -->\r\n<div class=\"modal-overlay\" *ngIf=\"showAddForm\" (click)=\"cancelForm()\">\r\n  <div class=\"modal-content\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-header\">\r\n      <h2>{{ isEditing ? 'Edit Book' : 'Add New Book' }}</h2>\r\n      <button class=\"close-btn\" (click)=\"cancelForm()\">✕</button>\r\n    </div>\r\n    \r\n    <form [formGroup]=\"bookForm\" (ngSubmit)=\"onSubmit()\" class=\"book-form\">\r\n      <div class=\"form-grid\">\r\n        <div class=\"form-group\">\r\n          <label for=\"title\">Title *</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"title\" \r\n            formControlName=\"title\" \r\n            class=\"form-input\"\r\n            [class.error]=\"bookForm.get('title')?.invalid && bookForm.get('title')?.touched\">\r\n          <span class=\"error-message\" *ngIf=\"getFormFieldError('title')\">{{ getFormFieldError('title') }}</span>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"author\">Author *</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"author\" \r\n            formControlName=\"author\" \r\n            class=\"form-input\"\r\n            [class.error]=\"bookForm.get('author')?.invalid && bookForm.get('author')?.touched\">\r\n          <span class=\"error-message\" *ngIf=\"getFormFieldError('author')\">{{ getFormFieldError('author') }}</span>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"isbn\">ISBN *</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"isbn\" \r\n            formControlName=\"isbn\" \r\n            class=\"form-input\"\r\n            placeholder=\"e.g. 9780123456789\"\r\n            [class.error]=\"bookForm.get('isbn')?.invalid && bookForm.get('isbn')?.touched\">\r\n          <span class=\"error-message\" *ngIf=\"getFormFieldError('isbn')\">{{ getFormFieldError('isbn') }}</span>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"price\">Price *</label>\r\n          <input \r\n            type=\"number\" \r\n            id=\"price\" \r\n            formControlName=\"price\" \r\n            class=\"form-input\"\r\n            step=\"0.01\"\r\n            min=\"0\"\r\n            [class.error]=\"bookForm.get('price')?.invalid && bookForm.get('price')?.touched\">\r\n          <span class=\"error-message\" *ngIf=\"getFormFieldError('price')\">{{ getFormFieldError('price') }}</span>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"category\">Category *</label>\r\n          <select \r\n            id=\"category\" \r\n            formControlName=\"category\" \r\n            class=\"form-input\"\r\n            [class.error]=\"bookForm.get('category')?.invalid && bookForm.get('category')?.touched\">\r\n            <option value=\"\">Select Category</option>\r\n            <option *ngFor=\"let category of categories\" [value]=\"category\">{{ category }}</option>\r\n          </select>\r\n          <span class=\"error-message\" *ngIf=\"getFormFieldError('category')\">{{ getFormFieldError('category') }}</span>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"stock\">Stock Quantity *</label>\r\n          <input \r\n            type=\"number\" \r\n            id=\"stock\" \r\n            formControlName=\"stock\" \r\n            class=\"form-input\"\r\n            min=\"0\"\r\n            [class.error]=\"bookForm.get('stock')?.invalid && bookForm.get('stock')?.touched\">\r\n          <span class=\"error-message\" *ngIf=\"getFormFieldError('stock')\">{{ getFormFieldError('stock') }}</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"form-group full-width\">\r\n        <label for=\"imageUrl\">Image URL *</label>\r\n        <input \r\n          type=\"url\" \r\n          id=\"imageUrl\" \r\n          formControlName=\"imageUrl\" \r\n          class=\"form-input\"\r\n          placeholder=\"https://example.com/book-cover.jpg\"\r\n          [class.error]=\"bookForm.get('imageUrl')?.invalid && bookForm.get('imageUrl')?.touched\">\r\n        <span class=\"error-message\" *ngIf=\"getFormFieldError('imageUrl')\">{{ getFormFieldError('imageUrl') }}</span>\r\n      </div>\r\n      \r\n      <div class=\"form-group full-width\">\r\n        <label for=\"description\">Description *</label>\r\n        <textarea \r\n          id=\"description\" \r\n          formControlName=\"description\" \r\n          class=\"form-textarea\"\r\n          rows=\"4\"\r\n          placeholder=\"Enter book description...\"\r\n          [class.error]=\"bookForm.get('description')?.invalid && bookForm.get('description')?.touched\"></textarea>\r\n        <span class=\"error-message\" *ngIf=\"getFormFieldError('description')\">{{ getFormFieldError('description') }}</span>\r\n      </div>\r\n      \r\n      <div class=\"form-checkboxes\">\r\n        <label class=\"checkbox-label\">\r\n          <input type=\"checkbox\" formControlName=\"featured\">\r\n          <span class=\"checkbox-slider\"></span>\r\n          Featured Book\r\n        </label>\r\n        <label class=\"checkbox-label\">\r\n          <input type=\"checkbox\" formControlName=\"bestseller\">\r\n          <span class=\"checkbox-slider\"></span>\r\n          Bestseller\r\n        </label>\r\n        <label class=\"checkbox-label\">\r\n          <input type=\"checkbox\" formControlName=\"newArrival\">\r\n          <span class=\"checkbox-slider\"></span>\r\n          New Arrival\r\n        </label>\r\n      </div>\r\n      \r\n      <div class=\"form-actions\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cancelForm()\">Cancel</button>\r\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"bookForm.invalid\">\r\n          {{ isEditing ? 'Update Book' : 'Add Book' }}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthService } from '../../../core/services/auth.service';\r\n\r\nexport interface User {\r\n  id: string;\r\n  email: string;\r\n  displayName: string;\r\n  photoURL?: string;\r\n  role: 'admin' | 'user';\r\n  isActive: boolean;\r\n  createdAt: Date;\r\n  lastLoginAt?: Date;\r\n  totalOrders: number;\r\n  totalSpent: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  templateUrl: './user-management.html',\r\n  styleUrls: ['./user-management.scss']\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n  users: User[] = [];\r\n  filteredUsers: User[] = [];\r\n  selectedUser: User | null = null;\r\n  showUserDetails = false;\r\n  searchTerm = '';\r\n  selectedRole = '';\r\n  selectedStatus = '';\r\n  sortBy = 'createdAt';\r\n  sortDirection = 'desc';\r\n  loading = false;\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.loadUsers();\r\n  }\r\n\r\n  async loadUsers() {\r\n    this.loading = true;\r\n    try {\r\n      // In a real app, this would fetch from a user service\r\n      this.users = [\r\n        {\r\n          id: '1',\r\n          email: 'john.doe@example.com',\r\n          displayName: 'John Doe',\r\n          photoURL: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100',\r\n          role: 'user',\r\n          isActive: true,\r\n          createdAt: new Date('2023-01-15'),\r\n          lastLoginAt: new Date('2024-01-20'),\r\n          totalOrders: 12,\r\n          totalSpent: 245.99\r\n        },\r\n        {\r\n          id: '2',\r\n          email: 'jane.smith@example.com',\r\n          displayName: 'Jane Smith',\r\n          photoURL: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=100',\r\n          role: 'user',\r\n          isActive: true,\r\n          createdAt: new Date('2023-02-20'),\r\n          lastLoginAt: new Date('2024-01-19'),\r\n          totalOrders: 8,\r\n          totalSpent: 189.50\r\n        },\r\n        {\r\n          id: '3',\r\n          email: 'admin@readify.com',\r\n          displayName: 'Admin User',\r\n          photoURL: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=100',\r\n          role: 'admin',\r\n          isActive: true,\r\n          createdAt: new Date('2022-12-01'),\r\n          lastLoginAt: new Date('2024-01-21'),\r\n          totalOrders: 0,\r\n          totalSpent: 0\r\n        },\r\n        {\r\n          id: '4',\r\n          email: 'bob.wilson@example.com',\r\n          displayName: 'Bob Wilson',\r\n          role: 'user',\r\n          isActive: false,\r\n          createdAt: new Date('2023-05-10'),\r\n          lastLoginAt: new Date('2023-11-15'),\r\n          totalOrders: 3,\r\n          totalSpent: 67.25\r\n        },\r\n        {\r\n          id: '5',\r\n          email: 'alice.brown@example.com',\r\n          displayName: 'Alice Brown',\r\n          photoURL: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=100',\r\n          role: 'user',\r\n          isActive: true,\r\n          createdAt: new Date('2023-03-08'),\r\n          lastLoginAt: new Date('2024-01-18'),\r\n          totalOrders: 15,\r\n          totalSpent: 312.75\r\n        }\r\n      ];\r\n      this.filterUsers();\r\n    } catch (error) {\r\n      console.error('Error loading users:', error);\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  filterUsers() {\r\n    this.filteredUsers = this.users.filter(user => {\r\n      const matchesSearch = user.email.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n                           user.displayName.toLowerCase().includes(this.searchTerm.toLowerCase());\r\n      const matchesRole = !this.selectedRole || user.role === this.selectedRole;\r\n      const matchesStatus = !this.selectedStatus || \r\n                           (this.selectedStatus === 'active' && user.isActive) ||\r\n                           (this.selectedStatus === 'inactive' && !user.isActive);\r\n      return matchesSearch && matchesRole && matchesStatus;\r\n    });\r\n    \r\n    this.sortUsers();\r\n  }\r\n\r\n  sortUsers() {\r\n    this.filteredUsers.sort((a, b) => {\r\n      let aValue = a[this.sortBy as keyof User];\r\n      let bValue = b[this.sortBy as keyof User];\r\n      \r\n      if (aValue === undefined) aValue = '';\r\n      if (bValue === undefined) bValue = '';\r\n      \r\n      if (typeof aValue === 'string' && typeof bValue === 'string') {\r\n        aValue = aValue.toLowerCase();\r\n        bValue = bValue.toLowerCase();\r\n      }\r\n      \r\n      if (aValue < bValue) return this.sortDirection === 'asc' ? -1 : 1;\r\n      if (aValue > bValue) return this.sortDirection === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  onSearch() {\r\n    this.filterUsers();\r\n  }\r\n\r\n  onRoleFilter() {\r\n    this.filterUsers();\r\n  }\r\n\r\n  onStatusFilter() {\r\n    this.filterUsers();\r\n  }\r\n\r\n  onSort() {\r\n    this.sortUsers();\r\n  }\r\n\r\n  toggleSortDirection() {\r\n    this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\r\n    this.sortUsers();\r\n  }\r\n\r\n  viewUserDetails(user: User) {\r\n    this.selectedUser = user;\r\n    this.showUserDetails = true;\r\n  }\r\n\r\n  closeUserDetails() {\r\n    this.selectedUser = null;\r\n    this.showUserDetails = false;\r\n  }\r\n\r\n  async toggleUserStatus(user: User) {\r\n    if (confirm(`Are you sure you want to ${user.isActive ? 'deactivate' : 'activate'} ${user.displayName}?`)) {\r\n      try {\r\n        user.isActive = !user.isActive;\r\n        // In a real app, this would update the user in the database\r\n        console.log(`User ${user.displayName} ${user.isActive ? 'activated' : 'deactivated'}`);\r\n      } catch (error) {\r\n        console.error('Error updating user status:', error);\r\n        // Revert the change if there's an error\r\n        user.isActive = !user.isActive;\r\n      }\r\n    }\r\n  }\r\n\r\n  async deleteUser(user: User) {\r\n    if (user.role === 'admin') {\r\n      alert('Cannot delete admin users');\r\n      return;\r\n    }\r\n    \r\n    if (confirm(`Are you sure you want to delete ${user.displayName}? This action cannot be undone.`)) {\r\n      try {\r\n        this.users = this.users.filter(u => u.id !== user.id);\r\n        this.filterUsers();\r\n        console.log(`User ${user.displayName} deleted`);\r\n      } catch (error) {\r\n        console.error('Error deleting user:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  async promoteToAdmin(user: User) {\r\n    if (confirm(`Are you sure you want to promote ${user.displayName} to admin?`)) {\r\n      try {\r\n        user.role = 'admin';\r\n        // In a real app, this would update the user role in the database\r\n        console.log(`User ${user.displayName} promoted to admin`);\r\n      } catch (error) {\r\n        console.error('Error promoting user:', error);\r\n        user.role = 'user'; // Revert on error\r\n      }\r\n    }\r\n  }\r\n\r\n  async demoteFromAdmin(user: User) {\r\n    if (confirm(`Are you sure you want to demote ${user.displayName} from admin?`)) {\r\n      try {\r\n        user.role = 'user';\r\n        // In a real app, this would update the user role in the database\r\n        console.log(`User ${user.displayName} demoted from admin`);\r\n      } catch (error) {\r\n        console.error('Error demoting user:', error);\r\n        user.role = 'admin'; // Revert on error\r\n      }\r\n    }\r\n  }\r\n\r\n  formatDate(date: Date): string {\r\n    return new Date(date).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n  }\r\n\r\n  formatCurrency(amount: number): string {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD'\r\n    }).format(amount);\r\n  }\r\n\r\n  getUserStatusColor(user: User): string {\r\n    if (!user.isActive) return 'status-inactive';\r\n    if (user.role === 'admin') return 'status-admin';\r\n    return 'status-active';\r\n  }\r\n\r\n  getDefaultAvatar(name: string): string {\r\n    return `https://ui-avatars.com/api/?name=${encodeURIComponent(name)}&background=667eea&color=fff&size=100`;\r\n  }\r\n\r\n  // Statistics methods\r\n  getTotalUsers(): number {\r\n    return this.users.length;\r\n  }\r\n\r\n  getActiveUsers(): number {\r\n    return this.users.filter(u => u.isActive).length;\r\n  }\r\n\r\n  getAdminUsers(): number {\r\n    return this.users.filter(u => u.role === 'admin').length;\r\n  }\r\n\r\n  // Image handling\r\n  onImageError(event: Event, user: User) {\r\n    const target = event.target as HTMLImageElement;\r\n    if (target) {\r\n      target.src = this.getDefaultAvatar(user.displayName);\r\n    }\r\n  }\r\n\r\n  // Role helper methods\r\n  isUserRole(user: User): boolean {\r\n    return user.role === 'user';\r\n  }\r\n\r\n  isAdminRole(user: User): boolean {\r\n    return user.role === 'admin';\r\n  }\r\n\r\n  getRoleDisplayName(user: User): string {\r\n    return user.role === 'admin' ? '👑 Admin' : '👤 User';\r\n  }\r\n\r\n  // Status helper methods\r\n  getStatusDisplay(user: User): string {\r\n    return user.isActive ? 'Active' : 'Inactive';\r\n  }\r\n\r\n  getStatusButtonClass(user: User): string {\r\n    return user.isActive ? 'btn-warning' : 'btn-success';\r\n  }\r\n\r\n  getStatusButtonTitle(user: User): string {\r\n    return user.isActive ? 'Deactivate User' : 'Activate User';\r\n  }\r\n\r\n  getStatusIcon(user: User): string {\r\n    return user.isActive ? '⏸️' : '▶️';\r\n  }\r\n\r\n  getStatusButtonText(user: User): string {\r\n    return user.isActive ? 'Deactivate User' : 'Activate User';\r\n  }\r\n\r\n  getModalStatusClass(user: User): string {\r\n    return user.isActive ? 'warning' : 'success';\r\n  }\r\n\r\n  // Sorting helper methods\r\n  getSortDirectionSymbol(): string {\r\n    return this.sortDirection === 'asc' ? '↑' : '↓';\r\n  }\r\n\r\n  // Filtering helper methods\r\n  hasActiveFilters(): boolean {\r\n    return !!(this.searchTerm || this.selectedRole || this.selectedStatus);\r\n  }\r\n\r\n  hasNoActiveFilters(): boolean {\r\n    return !this.hasActiveFilters();\r\n  }\r\n\r\n  getEmptyStateMessage(): string {\r\n    if (this.hasActiveFilters()) {\r\n      return \"Try adjusting your filters to see more results.\";\r\n    }\r\n    return \"No users found. This is unexpected!\";\r\n  }\r\n}\r\n", "<div class=\"user-management\">\r\n  <div class=\"page-header\">\r\n    <h1>User Management</h1>\r\n    <div class=\"header-stats\">\r\n      <div class=\"stat-item\">\r\n        <span class=\"stat-value\">{{ getTotalUsers() }}</span>\r\n        <span class=\"stat-label\">Total Users</span>\r\n      </div>\r\n      <div class=\"stat-item\">\r\n        <span class=\"stat-value\">{{ getActiveUsers() }}</span>\r\n        <span class=\"stat-label\">Active Users</span>\r\n      </div>\r\n      <div class=\"stat-item\">\r\n        <span class=\"stat-value\">{{ getAdminUsers() }}</span>\r\n        <span class=\"stat-label\">Admins</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Filters and Search -->\r\n  <div class=\"filters-section\">\r\n    <div class=\"search-box\">\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Search users by name or email...\" \r\n        [(ngModel)]=\"searchTerm\"\r\n        (input)=\"onSearch()\"\r\n        class=\"search-input\">\r\n      <span class=\"search-icon\">🔍</span>\r\n    </div>\r\n    \r\n    <div class=\"filter-controls\">\r\n      <select [(ngModel)]=\"selectedRole\" (change)=\"onRoleFilter()\" class=\"filter-select\">\r\n        <option value=\"\">All Roles</option>\r\n        <option value=\"user\">Users</option>\r\n        <option value=\"admin\">Admins</option>\r\n      </select>\r\n      \r\n      <select [(ngModel)]=\"selectedStatus\" (change)=\"onStatusFilter()\" class=\"filter-select\">\r\n        <option value=\"\">All Status</option>\r\n        <option value=\"active\">Active</option>\r\n        <option value=\"inactive\">Inactive</option>\r\n      </select>\r\n      \r\n      <select [(ngModel)]=\"sortBy\" (change)=\"onSort()\" class=\"filter-select\">\r\n        <option value=\"createdAt\">Sort by Join Date</option>\r\n        <option value=\"displayName\">Sort by Name</option>\r\n        <option value=\"email\">Sort by Email</option>\r\n        <option value=\"totalOrders\">Sort by Orders</option>\r\n        <option value=\"totalSpent\">Sort by Spending</option>\r\n        <option value=\"lastLoginAt\">Sort by Last Login</option>\r\n      </select>        <button class=\"sort-direction-btn\" (click)=\"toggleSortDirection()\">\r\n          {{ getSortDirectionSymbol() }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Users Table -->    <div class=\"users-table-container\" *ngIf=\"!loading && filteredUsers.length > 0\">\r\n    <table class=\"users-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>User</th>\r\n          <th>Email</th>\r\n          <th>Role</th>\r\n          <th>Status</th>\r\n          <th>Orders</th>\r\n          <th>Total Spent</th>\r\n          <th>Join Date</th>\r\n          <th>Last Login</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let user of filteredUsers\" class=\"user-row\">\r\n          <td class=\"user-info\">\r\n            <img \r\n              [src]=\"user.photoURL || getDefaultAvatar(user.displayName)\" \r\n              [alt]=\"user.displayName\"\r\n              class=\"user-avatar\"\r\n              (error)=\"onImageError($event, user)\">\r\n            <div class=\"user-details\">\r\n              <h4>{{ user.displayName }}</h4>\r\n              <span class=\"user-id\">ID: {{ user.id }}</span>\r\n            </div>\r\n          </td>\r\n          <td class=\"user-email\">{{ user.email }}</td>\r\n          <td>\r\n            <span class=\"role-badge\" [class]=\"'role-' + user.role\">\r\n              {{ getRoleDisplayName(user) }}\r\n            </span>\r\n          </td>\r\n          <td>\r\n            <span class=\"status-badge\" [class]=\"getUserStatusColor(user)\">\r\n              {{ getStatusDisplay(user) }}\r\n            </span>\r\n          </td>\r\n          <td class=\"user-orders\">{{ user.totalOrders }}</td>\r\n          <td class=\"user-spent\">{{ formatCurrency(user.totalSpent) }}</td>\r\n          <td class=\"user-date\">{{ formatDate(user.createdAt) }}</td>\r\n          <td class=\"user-date\">\r\n            {{ user.lastLoginAt ? formatDate(user.lastLoginAt) : 'Never' }}\r\n          </td>\r\n          <td class=\"user-actions\">\r\n            <div class=\"action-buttons\">\r\n              <button \r\n                class=\"btn btn-sm btn-info\" \r\n                (click)=\"viewUserDetails(user)\"\r\n                title=\"View Details\">\r\n                👁️\r\n              </button>\r\n              <button \r\n                class=\"btn btn-sm\" \r\n                [class]=\"getStatusButtonClass(user)\"\r\n                (click)=\"toggleUserStatus(user)\"\r\n                [title]=\"getStatusButtonTitle(user)\">\r\n                {{ getStatusIcon(user) }}\r\n              </button>\r\n              <button \r\n                *ngIf=\"isUserRole(user)\"\r\n                class=\"btn btn-sm btn-secondary\" \r\n                (click)=\"promoteToAdmin(user)\"\r\n                title=\"Promote to Admin\">\r\n                👑\r\n              </button>\r\n              <button \r\n                *ngIf=\"isAdminRole(user)\"\r\n                class=\"btn btn-sm btn-secondary\" \r\n                (click)=\"demoteFromAdmin(user)\"\r\n                title=\"Demote from Admin\">\r\n                👤\r\n              </button>\r\n              <button \r\n                *ngIf=\"!isAdminRole(user)\"\r\n                class=\"btn btn-sm btn-danger\" \r\n                (click)=\"deleteUser(user)\"\r\n                title=\"Delete User\">\r\n                🗑️\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <!-- Empty State -->\r\n  <div class=\"empty-state\" *ngIf=\"!loading && filteredUsers.length === 0\">\r\n    <div class=\"empty-icon\">👥</div>\r\n    <h3>No Users Found</h3>\r\n    <p *ngIf=\"hasActiveFilters()\">Try adjusting your filters or search terms.</p>\r\n    <p *ngIf=\"hasNoActiveFilters()\">No users have registered yet.</p>\r\n  </div>\r\n\r\n  <!-- Loading State -->\r\n  <div class=\"loading-state\" *ngIf=\"loading\">\r\n    <div class=\"spinner\"></div>\r\n    <p>Loading users...</p>\r\n  </div>\r\n</div>\r\n\r\n<!-- User Details Modal -->  <div class=\"modal-overlay\" *ngIf=\"showUserDetails && selectedUser\" (click)=\"closeUserDetails()\">\r\n  <div class=\"modal-content\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-header\">\r\n      <h2>User Details</h2>\r\n      <button class=\"close-btn\" (click)=\"closeUserDetails()\">✕</button>\r\n    </div>\r\n    \r\n    <div class=\"user-detail-content\">\r\n      <div class=\"user-profile\">\r\n        <img \r\n          [src]=\"selectedUser.photoURL || getDefaultAvatar(selectedUser.displayName)\" \r\n          [alt]=\"selectedUser.displayName\"\r\n          class=\"profile-avatar\">\r\n        <div class=\"profile-info\">\r\n          <h3>{{ selectedUser.displayName }}</h3>\r\n          <p class=\"profile-email\">{{ selectedUser.email }}</p>\r\n          <div class=\"profile-badges\">\r\n            <span class=\"role-badge\" [class]=\"'role-' + selectedUser.role\">\r\n              {{ getRoleDisplayName(selectedUser) }}\r\n            </span>\r\n            <span class=\"status-badge\" [class]=\"getUserStatusColor(selectedUser)\">\r\n              {{ getStatusDisplay(selectedUser) }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"user-stats-grid\">\r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-icon\">🛒</div>\r\n          <div class=\"stat-content\">\r\n            <h4>{{ selectedUser.totalOrders }}</h4>\r\n            <p>Total Orders</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-icon\">💰</div>\r\n          <div class=\"stat-content\">\r\n            <h4>{{ formatCurrency(selectedUser.totalSpent) }}</h4>\r\n            <p>Total Spent</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-icon\">📅</div>\r\n          <div class=\"stat-content\">\r\n            <h4>{{ formatDate(selectedUser.createdAt) }}</h4>\r\n            <p>Join Date</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-card\">\r\n          <div class=\"stat-icon\">🕒</div>\r\n          <div class=\"stat-content\">\r\n            <h4>{{ selectedUser.lastLoginAt ? formatDate(selectedUser.lastLoginAt) : 'Never' }}</h4>\r\n            <p>Last Login</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"user-actions-section\">\r\n        <h4>Quick Actions</h4>\r\n        <div class=\"quick-actions\">\r\n          <button \r\n            class=\"action-btn\" \r\n            [class]=\"getModalStatusClass(selectedUser)\"\r\n            (click)=\"toggleUserStatus(selectedUser)\">\r\n            <span class=\"action-icon\">{{ getStatusIcon(selectedUser) }}</span>\r\n            {{ getStatusButtonText(selectedUser) }}\r\n          </button>\r\n          \r\n          <button \r\n            *ngIf=\"isUserRole(selectedUser)\"\r\n            class=\"action-btn secondary\"\r\n            (click)=\"promoteToAdmin(selectedUser)\">\r\n            <span class=\"action-icon\">👑</span>\r\n            Promote to Admin\r\n          </button>\r\n          \r\n          <button \r\n            *ngIf=\"isAdminRole(selectedUser)\"\r\n            class=\"action-btn secondary\"\r\n            (click)=\"demoteFromAdmin(selectedUser)\">\r\n            <span class=\"action-icon\">👤</span>\r\n            Demote from Admin\r\n          </button>\r\n          \r\n          <button \r\n            *ngIf=\"!isAdminRole(selectedUser)\"\r\n            class=\"action-btn danger\"\r\n            (click)=\"deleteUser(selectedUser); closeUserDetails()\">\r\n            <span class=\"action-icon\">🗑️</span>\r\n            Delete User\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nexport interface AnalyticsData {\r\n  revenue: {\r\n    total: number;\r\n    monthly: number;\r\n    growth: number;\r\n  };\r\n  sales: {\r\n    total: number;\r\n    monthly: number;\r\n    growth: number;\r\n  };\r\n  users: {\r\n    total: number;\r\n    monthly: number;\r\n    growth: number;\r\n  };\r\n  orders: {\r\n    total: number;\r\n    monthly: number;\r\n    growth: number;\r\n  };\r\n}\r\n\r\nexport interface ChartData {\r\n  labels: string[];\r\n  datasets: {\r\n    label: string;\r\n    data: number[];\r\n    borderColor: string;\r\n    backgroundColor: string;\r\n  }[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-analytics',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  templateUrl: './analytics.html',\r\n  styleUrls: ['./analytics.scss']\r\n})\r\nexport class AnalyticsComponent implements OnInit {\r\n  analyticsData: AnalyticsData = {\r\n    revenue: { total: 15680, monthly: 3420, growth: 12.5 },\r\n    sales: { total: 1247, monthly: 287, growth: 8.3 },\r\n    users: { total: 8950, monthly: 425, growth: 15.2 },\r\n    orders: { total: 342, monthly: 89, growth: 18.7 }\r\n  };\r\n\r\n  revenueChartData: ChartData = {\r\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\r\n    datasets: [{\r\n      label: 'Revenue',\r\n      data: [2100, 2400, 2800, 3200, 3600, 3420],\r\n      borderColor: '#667eea',\r\n      backgroundColor: 'rgba(102, 126, 234, 0.1)'\r\n    }]\r\n  };\r\n\r\n  salesChartData: ChartData = {\r\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\r\n    datasets: [{\r\n      label: 'Sales',\r\n      data: [180, 220, 240, 280, 310, 287],\r\n      borderColor: '#f093fb',\r\n      backgroundColor: 'rgba(240, 147, 251, 0.1)'\r\n    }]\r\n  };\r\n\r\n  topCategories = [\r\n    { name: 'Fiction', sales: 156, percentage: 35, color: '#667eea' },\r\n    { name: 'Non-Fiction', sales: 134, percentage: 30, color: '#f093fb' },\r\n    { name: 'Science Fiction', sales: 89, percentage: 20, color: '#4facfe' },\r\n    { name: 'Romance', sales: 67, percentage: 15, color: '#38a169' }\r\n  ];\r\n\r\n  topBooks = [\r\n    { title: 'The Great Gatsby', sales: 45, revenue: 675, trend: 'up' },\r\n    { title: 'To Kill a Mockingbird', sales: 38, revenue: 532, trend: 'up' },\r\n    { title: '1984', sales: 34, revenue: 442, trend: 'down' },\r\n    { title: 'Dune', sales: 29, revenue: 464, trend: 'up' },\r\n    { title: 'The Hobbit', sales: 26, revenue: 312, trend: 'stable' }\r\n  ];\r\n\r\n  recentActivity = [\r\n    { type: 'sale', message: 'New order placed', amount: 45.99, time: '2 minutes ago' },\r\n    { type: 'user', message: 'New user registered', amount: 0, time: '15 minutes ago' },\r\n    { type: 'sale', message: 'Order completed', amount: 89.50, time: '23 minutes ago' },\r\n    { type: 'review', message: 'New 5-star review', amount: 0, time: '1 hour ago' },\r\n    { type: 'sale', message: 'Large order placed', amount: 234.75, time: '2 hours ago' }\r\n  ];\r\n\r\n  selectedPeriod = 'monthly';\r\n  loading = false;\r\n\r\n  ngOnInit() {\r\n    this.loadAnalytics();\r\n  }\r\n\r\n  loadAnalytics() {\r\n    this.loading = true;\r\n    // Simulate API loading\r\n    setTimeout(() => {\r\n      this.loading = false;\r\n    }, 1000);\r\n  }\r\n\r\n  onPeriodChange() {\r\n    this.loadAnalytics();\r\n  }\r\n\r\n  formatCurrency(amount: number): string {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD'\r\n    }).format(amount);\r\n  }\r\n\r\n  formatPercentage(value: number): string {\r\n    return `${value > 0 ? '+' : ''}${value}%`;\r\n  }\r\n\r\n  getTrendIcon(trend: string): string {\r\n    switch (trend) {\r\n      case 'up': return '📈';\r\n      case 'down': return '📉';\r\n      case 'stable': return '➡️';\r\n      default: return '📊';\r\n    }\r\n  }\r\n\r\n  getActivityIcon(type: string): string {\r\n    switch (type) {\r\n      case 'sale': return '💰';\r\n      case 'user': return '👤';\r\n      case 'review': return '⭐';\r\n      default: return '📊';\r\n    }\r\n  }\r\n\r\n  getGrowthClass(growth: number): string {\r\n    if (growth > 0) return 'positive';\r\n    if (growth < 0) return 'negative';\r\n    return 'neutral';\r\n  }\r\n}\r\n", "<div class=\"analytics\">\r\n  <div class=\"page-header\">\r\n    <h1>Analytics Dashboard</h1>\r\n    <div class=\"period-selector\">\r\n      <label for=\"period\">Period:</label>\r\n      <select id=\"period\" [(ngModel)]=\"selectedPeriod\" (change)=\"onPeriodChange()\" class=\"period-select\">\r\n        <option value=\"daily\">Daily</option>\r\n        <option value=\"weekly\">Weekly</option>\r\n        <option value=\"monthly\">Monthly</option>\r\n        <option value=\"yearly\">Yearly</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"analytics-content\" *ngIf=\"!loading\">\r\n    <!-- Key Metrics -->\r\n    <div class=\"metrics-grid\">\r\n      <div class=\"metric-card revenue\">\r\n        <div class=\"metric-icon\">💰</div>\r\n        <div class=\"metric-info\">\r\n          <h3>{{ formatCurrency(analyticsData.revenue.monthly) }}</h3>\r\n          <p>Monthly Revenue</p>\r\n          <span class=\"metric-growth\" [class]=\"getGrowthClass(analyticsData.revenue.growth)\">\r\n            {{ formatPercentage(analyticsData.revenue.growth) }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"metric-card sales\">\r\n        <div class=\"metric-icon\">📚</div>\r\n        <div class=\"metric-info\">\r\n          <h3>{{ analyticsData.sales.monthly }}</h3>\r\n          <p>Monthly Sales</p>\r\n          <span class=\"metric-growth\" [class]=\"getGrowthClass(analyticsData.sales.growth)\">\r\n            {{ formatPercentage(analyticsData.sales.growth) }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"metric-card users\">\r\n        <div class=\"metric-icon\">👥</div>\r\n        <div class=\"metric-info\">\r\n          <h3>{{ analyticsData.users.monthly }}</h3>\r\n          <p>New Users</p>\r\n          <span class=\"metric-growth\" [class]=\"getGrowthClass(analyticsData.users.growth)\">\r\n            {{ formatPercentage(analyticsData.users.growth) }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"metric-card orders\">\r\n        <div class=\"metric-icon\">🛒</div>\r\n        <div class=\"metric-info\">\r\n          <h3>{{ analyticsData.orders.monthly }}</h3>\r\n          <p>Monthly Orders</p>\r\n          <span class=\"metric-growth\" [class]=\"getGrowthClass(analyticsData.orders.growth)\">\r\n            {{ formatPercentage(analyticsData.orders.growth) }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Charts Section -->\r\n    <div class=\"charts-grid\">\r\n      <!-- Revenue Chart -->\r\n      <div class=\"chart-card\">\r\n        <div class=\"chart-header\">\r\n          <h3>Revenue Trend</h3>\r\n          <span class=\"chart-total\">Total: {{ formatCurrency(analyticsData.revenue.total) }}</span>\r\n        </div>\r\n        <div class=\"chart-container\">\r\n          <div class=\"simple-chart\">\r\n            <div class=\"chart-bars\">\r\n              <div \r\n                *ngFor=\"let value of revenueChartData.datasets[0].data; let i = index\" \r\n                class=\"chart-bar\"\r\n                [style.height.%]=\"(value / 4000) * 100\"\r\n                [title]=\"revenueChartData.labels[i] + ': ' + formatCurrency(value)\">\r\n                <span class=\"bar-value\">{{ formatCurrency(value) }}</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"chart-labels\">\r\n              <span *ngFor=\"let label of revenueChartData.labels\">{{ label }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Sales Chart -->\r\n      <div class=\"chart-card\">\r\n        <div class=\"chart-header\">\r\n          <h3>Sales Trend</h3>\r\n          <span class=\"chart-total\">Total: {{ analyticsData.sales.total }} books</span>\r\n        </div>\r\n        <div class=\"chart-container\">\r\n          <div class=\"simple-chart\">\r\n            <div class=\"chart-bars sales-bars\">\r\n              <div \r\n                *ngFor=\"let value of salesChartData.datasets[0].data; let i = index\" \r\n                class=\"chart-bar\"\r\n                [style.height.%]=\"(value / 350) * 100\"\r\n                [title]=\"salesChartData.labels[i] + ': ' + value + ' books'\">\r\n                <span class=\"bar-value\">{{ value }}</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"chart-labels\">\r\n              <span *ngFor=\"let label of salesChartData.labels\">{{ label }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Secondary Analytics -->\r\n    <div class=\"secondary-analytics\">\r\n      <!-- Top Categories -->\r\n      <div class=\"analytics-card\">\r\n        <div class=\"card-header\">\r\n          <h3>Top Categories</h3>\r\n          <span class=\"view-all\">View All</span>\r\n        </div>\r\n        <div class=\"categories-list\">\r\n          <div class=\"category-item\" *ngFor=\"let category of topCategories\">\r\n            <div class=\"category-info\">\r\n              <div class=\"category-color\" [style.background-color]=\"category.color\"></div>\r\n              <div class=\"category-details\">\r\n                <h4>{{ category.name }}</h4>\r\n                <p>{{ category.sales }} sales</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"category-percentage\">\r\n              <span>{{ category.percentage }}%</span>\r\n              <div class=\"percentage-bar\">\r\n                <div \r\n                  class=\"percentage-fill\" \r\n                  [style.width.%]=\"category.percentage\"\r\n                  [style.background-color]=\"category.color\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Top Books -->\r\n      <div class=\"analytics-card\">\r\n        <div class=\"card-header\">\r\n          <h3>Top Selling Books</h3>\r\n          <span class=\"view-all\">View All</span>\r\n        </div>\r\n        <div class=\"books-list\">\r\n          <div class=\"book-item\" *ngFor=\"let book of topBooks; let i = index\">\r\n            <div class=\"book-rank\">{{ i + 1 }}</div>\r\n            <div class=\"book-details\">\r\n              <h4>{{ book.title }}</h4>\r\n              <p>{{ book.sales }} sales • {{ formatCurrency(book.revenue) }}</p>\r\n            </div>\r\n            <div class=\"book-trend\">\r\n              <span class=\"trend-icon\">{{ getTrendIcon(book.trend) }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Recent Activity -->\r\n      <div class=\"analytics-card\">\r\n        <div class=\"card-header\">\r\n          <h3>Recent Activity</h3>\r\n          <span class=\"view-all\">View All</span>\r\n        </div>\r\n        <div class=\"activity-list\">\r\n          <div class=\"activity-item\" *ngFor=\"let activity of recentActivity\">\r\n            <div class=\"activity-icon\">{{ getActivityIcon(activity.type) }}</div>\r\n            <div class=\"activity-details\">\r\n              <p class=\"activity-message\">{{ activity.message }}</p>\r\n              <span class=\"activity-time\">{{ activity.time }}</span>\r\n            </div>\r\n            <div class=\"activity-amount\" *ngIf=\"activity.amount > 0\">\r\n              {{ formatCurrency(activity.amount) }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Summary Stats -->\r\n    <div class=\"summary-section\">\r\n      <div class=\"summary-card\">\r\n        <h3>Performance Summary</h3>\r\n        <div class=\"summary-stats\">\r\n          <div class=\"summary-stat\">\r\n            <span class=\"stat-label\">Average Order Value</span>\r\n            <span class=\"stat-value\">{{ formatCurrency(analyticsData.revenue.total / analyticsData.orders.total) }}</span>\r\n          </div>\r\n          <div class=\"summary-stat\">\r\n            <span class=\"stat-label\">Books per Order</span>\r\n            <span class=\"stat-value\">{{ (analyticsData.sales.total / analyticsData.orders.total).toFixed(1) }}</span>\r\n          </div>\r\n          <div class=\"summary-stat\">\r\n            <span class=\"stat-label\">Customer Lifetime Value</span>\r\n            <span class=\"stat-value\">{{ formatCurrency(analyticsData.revenue.total / analyticsData.users.total) }}</span>\r\n          </div>\r\n          <div class=\"summary-stat\">\r\n            <span class=\"stat-label\">Conversion Rate</span>\r\n            <span class=\"stat-value\">{{ ((analyticsData.orders.total / analyticsData.users.total) * 100).toFixed(1) }}%</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Loading State -->\r\n  <div class=\"loading-state\" *ngIf=\"loading\">\r\n    <div class=\"spinner\"></div>\r\n    <p>Loading analytics data...</p>\r\n  </div>\r\n</div>\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { PricingService, PricingConfig } from '../../../core/services/pricing.service';\r\n\r\nexport interface SiteSettings {\r\n  siteName: string;\r\n  siteDescription: string;\r\n  contactEmail: string;\r\n  supportEmail: string;\r\n  phoneNumber: string;\r\n  address: string;\r\n  socialMedia: {\r\n    facebook: string;\r\n    twitter: string;\r\n    instagram: string;\r\n    linkedin: string;\r\n  };\r\n  businessHours: string;\r\n  currency: string;\r\n  taxRate: number;\r\n  shippingCost: number;\r\n  freeShippingThreshold: number;\r\n}\r\n\r\nexport interface NotificationSettings {\r\n  emailNotifications: boolean;\r\n  orderNotifications: boolean;\r\n  userRegistrationNotifications: boolean;\r\n  lowStockNotifications: boolean;\r\n  reviewNotifications: boolean;\r\n  newsletterEnabled: boolean;\r\n}\r\n\r\nexport interface SecuritySettings {\r\n  twoFactorAuth: boolean;\r\n  sessionTimeout: number;\r\n  passwordMinLength: number;\r\n  requireSpecialChars: boolean;\r\n  maxLoginAttempts: number;\r\n  accountLockoutDuration: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\r\n  templateUrl: './settings.html',\r\n  styleUrls: ['./settings.scss']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  activeTab = 'general';\r\n  generalForm: FormGroup;\r\n  notificationForm: FormGroup;\r\n  securityForm: FormGroup;\r\n  pricingForm: FormGroup;\r\n  loading = false;\r\n  saveMessage = '';\r\n\r\n  pricingConfig: PricingConfig;\r\n\r\n  siteSettings: SiteSettings = {\r\n    siteName: 'Readify',\r\n    siteDescription: 'Your premier destination for books of all genres',\r\n    contactEmail: 'contact@readify.com',\r\n    supportEmail: 'support@readify.com',\r\n    phoneNumber: '+1 (555) 123-4567',\r\n    address: '123 Book Street, Reading City, RC 12345',\r\n    socialMedia: {\r\n      facebook: 'https://facebook.com/readify',\r\n      twitter: 'https://twitter.com/readify',\r\n      instagram: 'https://instagram.com/readify',\r\n      linkedin: 'https://linkedin.com/company/readify'\r\n    },\r\n    businessHours: 'Mon-Fri: 9AM-6PM, Sat-Sun: 10AM-4PM',\r\n    currency: 'USD',\r\n    taxRate: 8.5,\r\n    shippingCost: 5.99,\r\n    freeShippingThreshold: 50\r\n  };\r\n\r\n  notificationSettings: NotificationSettings = {\r\n    emailNotifications: true,\r\n    orderNotifications: true,\r\n    userRegistrationNotifications: true,\r\n    lowStockNotifications: true,\r\n    reviewNotifications: false,\r\n    newsletterEnabled: true\r\n  };\r\n\r\n  securitySettings: SecuritySettings = {\r\n    twoFactorAuth: false,\r\n    sessionTimeout: 30,\r\n    passwordMinLength: 8,\r\n    requireSpecialChars: true,\r\n    maxLoginAttempts: 5,\r\n    accountLockoutDuration: 15\r\n  };\r\n\r\n  currencies = [\r\n    { code: 'USD', name: 'US Dollar', symbol: '$' },\r\n    { code: 'EUR', name: 'Euro', symbol: '€' },\r\n    { code: 'GBP', name: 'British Pound', symbol: '£' },\r\n    { code: 'CAD', name: 'Canadian Dollar', symbol: 'C$' },\r\n    { code: 'AUD', name: 'Australian Dollar', symbol: 'A$' }\r\n  ];\r\n\r\n  sessionTimeouts = [\r\n    { value: 15, label: '15 minutes' },\r\n    { value: 30, label: '30 minutes' },\r\n    { value: 60, label: '1 hour' },\r\n    { value: 120, label: '2 hours' },\r\n    { value: 240, label: '4 hours' }\r\n  ];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private pricingService: PricingService\r\n  ) {\r\n    this.generalForm = this.fb.group({\r\n      siteName: [this.siteSettings.siteName, [Validators.required, Validators.minLength(2)]],\r\n      siteDescription: [this.siteSettings.siteDescription, [Validators.required, Validators.minLength(10)]],\r\n      contactEmail: [this.siteSettings.contactEmail, [Validators.required, Validators.email]],\r\n      supportEmail: [this.siteSettings.supportEmail, [Validators.required, Validators.email]],\r\n      phoneNumber: [this.siteSettings.phoneNumber, Validators.required],\r\n      address: [this.siteSettings.address, Validators.required],\r\n      facebook: [this.siteSettings.socialMedia.facebook, Validators.pattern(/^https?:\\/\\/.*/)],\r\n      twitter: [this.siteSettings.socialMedia.twitter, Validators.pattern(/^https?:\\/\\/.*/)],\r\n      instagram: [this.siteSettings.socialMedia.instagram, Validators.pattern(/^https?:\\/\\/.*/)],\r\n      linkedin: [this.siteSettings.socialMedia.linkedin, Validators.pattern(/^https?:\\/\\/.*/)],\r\n      businessHours: [this.siteSettings.businessHours, Validators.required],\r\n      currency: [this.siteSettings.currency, Validators.required],\r\n      taxRate: [this.siteSettings.taxRate, [Validators.required, Validators.min(0), Validators.max(100)]],\r\n      shippingCost: [this.siteSettings.shippingCost, [Validators.required, Validators.min(0)]],\r\n      freeShippingThreshold: [this.siteSettings.freeShippingThreshold, [Validators.required, Validators.min(0)]]\r\n    });\r\n\r\n    this.notificationForm = this.fb.group({\r\n      emailNotifications: [this.notificationSettings.emailNotifications],\r\n      orderNotifications: [this.notificationSettings.orderNotifications],\r\n      userRegistrationNotifications: [this.notificationSettings.userRegistrationNotifications],\r\n      lowStockNotifications: [this.notificationSettings.lowStockNotifications],\r\n      reviewNotifications: [this.notificationSettings.reviewNotifications],\r\n      newsletterEnabled: [this.notificationSettings.newsletterEnabled]\r\n    });\r\n\r\n    this.securityForm = this.fb.group({\r\n      twoFactorAuth: [this.securitySettings.twoFactorAuth],\r\n      sessionTimeout: [this.securitySettings.sessionTimeout, Validators.required],\r\n      passwordMinLength: [this.securitySettings.passwordMinLength, [Validators.required, Validators.min(6), Validators.max(20)]],\r\n      requireSpecialChars: [this.securitySettings.requireSpecialChars],\r\n      maxLoginAttempts: [this.securitySettings.maxLoginAttempts, [Validators.required, Validators.min(3), Validators.max(10)]],\r\n      accountLockoutDuration: [this.securitySettings.accountLockoutDuration, [Validators.required, Validators.min(5), Validators.max(60)]]\r\n    });\r\n\r\n    // Initialize pricing config\r\n    this.pricingConfig = this.pricingService.getPricingConfig();\r\n    \r\n    this.pricingForm = this.fb.group({\r\n      // Base prices\r\n      fiction: [this.pricingConfig.basePrices.fiction, [Validators.required, Validators.min(0)]],\r\n      programming: [this.pricingConfig.basePrices.programming, [Validators.required, Validators.min(0)]],\r\n      science: [this.pricingConfig.basePrices.science, [Validators.required, Validators.min(0)]],\r\n      history: [this.pricingConfig.basePrices.history, [Validators.required, Validators.min(0)]],\r\n      biography: [this.pricingConfig.basePrices.biography, [Validators.required, Validators.min(0)]],\r\n      business: [this.pricingConfig.basePrices.business, [Validators.required, Validators.min(0)]],\r\n      philosophy: [this.pricingConfig.basePrices.philosophy, [Validators.required, Validators.min(0)]],\r\n      psychology: [this.pricingConfig.basePrices.psychology, [Validators.required, Validators.min(0)]],\r\n      art: [this.pricingConfig.basePrices.art, [Validators.required, Validators.min(0)]],\r\n      health: [this.pricingConfig.basePrices.health, [Validators.required, Validators.min(0)]],\r\n      education: [this.pricingConfig.basePrices.education, [Validators.required, Validators.min(0)]],\r\n      religion: [this.pricingConfig.basePrices.religion, [Validators.required, Validators.min(0)]],\r\n      general: [this.pricingConfig.basePrices['general'], [Validators.required, Validators.min(0)]],\r\n      \r\n      // Modifiers\r\n      bestsellerModifier: [this.pricingConfig.modifiers.bestseller, [Validators.required, Validators.min(0.1), Validators.max(5)]],\r\n      featuredModifier: [this.pricingConfig.modifiers.featured, [Validators.required, Validators.min(0.1), Validators.max(5)]],\r\n      newBookModifier: [this.pricingConfig.modifiers.newBook, [Validators.required, Validators.min(0.1), Validators.max(5)]],\r\n      \r\n      // Page count modifiers\r\n      under200Pages: [this.pricingConfig.modifiers.pageCount.under200, [Validators.required, Validators.min(0.1), Validators.max(5)]],\r\n      between200And400Pages: [this.pricingConfig.modifiers.pageCount.between200And400, [Validators.required, Validators.min(0.1), Validators.max(5)]],\r\n      between400And600Pages: [this.pricingConfig.modifiers.pageCount.between400And600, [Validators.required, Validators.min(0.1), Validators.max(5)]],\r\n      over600Pages: [this.pricingConfig.modifiers.pageCount.over600, [Validators.required, Validators.min(0.1), Validators.max(5)]],\r\n      \r\n      // Published year modifiers\r\n      currentYear: [this.pricingConfig.modifiers.publishedYear.current, [Validators.required, Validators.min(0.1), Validators.max(5)]],\r\n      recentYears: [this.pricingConfig.modifiers.publishedYear.recent, [Validators.required, Validators.min(0.1), Validators.max(5)]],\r\n      olderBooks: [this.pricingConfig.modifiers.publishedYear.older, [Validators.required, Validators.min(0.1), Validators.max(5)]],\r\n      \r\n      // Author popularity modifiers\r\n      famousAuthor: [this.pricingConfig.modifiers.authorPopularity.famous, [Validators.required, Validators.min(0.1), Validators.max(5)]],\r\n      knownAuthor: [this.pricingConfig.modifiers.authorPopularity.known, [Validators.required, Validators.min(0.1), Validators.max(5)]],\r\n      unknownAuthor: [this.pricingConfig.modifiers.authorPopularity.unknown, [Validators.required, Validators.min(0.1), Validators.max(5)]]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Load settings from backend\r\n  }\r\n\r\n  setActiveTab(tab: string) {\r\n    this.activeTab = tab;\r\n    this.saveMessage = '';\r\n  }\r\n\r\n  async saveGeneralSettings() {\r\n    if (this.generalForm.valid) {\r\n      this.loading = true;\r\n      try {\r\n        const formValue = this.generalForm.value;\r\n        this.siteSettings = {\r\n          ...this.siteSettings,\r\n          siteName: formValue.siteName,\r\n          siteDescription: formValue.siteDescription,\r\n          contactEmail: formValue.contactEmail,\r\n          supportEmail: formValue.supportEmail,\r\n          phoneNumber: formValue.phoneNumber,\r\n          address: formValue.address,\r\n          socialMedia: {\r\n            facebook: formValue.facebook,\r\n            twitter: formValue.twitter,\r\n            instagram: formValue.instagram,\r\n            linkedin: formValue.linkedin\r\n          },\r\n          businessHours: formValue.businessHours,\r\n          currency: formValue.currency,\r\n          taxRate: formValue.taxRate,\r\n          shippingCost: formValue.shippingCost,\r\n          freeShippingThreshold: formValue.freeShippingThreshold\r\n        };\r\n\r\n        // In a real app, save to backend\r\n        await this.delay(1000);\r\n        this.saveMessage = 'General settings saved successfully!';\r\n        setTimeout(() => this.saveMessage = '', 3000);\r\n      } catch (error) {\r\n        console.error('Error saving general settings:', error);\r\n        this.saveMessage = 'Error saving settings. Please try again.';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  async saveNotificationSettings() {\r\n    this.loading = true;\r\n    try {\r\n      this.notificationSettings = { ...this.notificationForm.value };\r\n      \r\n      // In a real app, save to backend\r\n      await this.delay(1000);\r\n      this.saveMessage = 'Notification settings saved successfully!';\r\n      setTimeout(() => this.saveMessage = '', 3000);\r\n    } catch (error) {\r\n      console.error('Error saving notification settings:', error);\r\n      this.saveMessage = 'Error saving settings. Please try again.';\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  async saveSecuritySettings() {\r\n    if (this.securityForm.valid) {\r\n      this.loading = true;\r\n      try {\r\n        this.securitySettings = { ...this.securityForm.value };\r\n        \r\n        // In a real app, save to backend\r\n        await this.delay(1000);\r\n        this.saveMessage = 'Security settings saved successfully!';\r\n        setTimeout(() => this.saveMessage = '', 3000);\r\n      } catch (error) {\r\n        console.error('Error saving security settings:', error);\r\n        this.saveMessage = 'Error saving settings. Please try again.';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  async savePricingSettings() {\r\n    if (this.pricingForm.valid) {\r\n      this.loading = true;\r\n      try {\r\n        const formValue = this.pricingForm.value;\r\n        \r\n        // Update pricing configuration\r\n        const updatedConfig: Partial<PricingConfig> = {\r\n          basePrices: {\r\n            ...this.pricingConfig.basePrices,\r\n            fiction: formValue.fiction,\r\n            programming: formValue.programming,\r\n            science: formValue.science,\r\n            history: formValue.history,\r\n            biography: formValue.biography,\r\n            business: formValue.business,\r\n            philosophy: formValue.philosophy,\r\n            psychology: formValue.psychology,\r\n            art: formValue.art,\r\n            health: formValue.health,\r\n            education: formValue.education,\r\n            religion: formValue.religion,\r\n            general: formValue.general\r\n          },\r\n          modifiers: {\r\n            bestseller: formValue.bestsellerModifier,\r\n            featured: formValue.featuredModifier,\r\n            newBook: formValue.newBookModifier,\r\n            pageCount: {\r\n              under200: formValue.under200Pages,\r\n              between200And400: formValue.between200And400Pages,\r\n              between400And600: formValue.between400And600Pages,\r\n              over600: formValue.over600Pages\r\n            },\r\n            publishedYear: {\r\n              current: formValue.currentYear,\r\n              recent: formValue.recentYears,\r\n              older: formValue.olderBooks\r\n            },\r\n            authorPopularity: {\r\n              famous: formValue.famousAuthor,\r\n              known: formValue.knownAuthor,\r\n              unknown: formValue.unknownAuthor\r\n            }\r\n          }\r\n        };\r\n\r\n        this.pricingService.updatePricingConfig(updatedConfig);\r\n        this.pricingConfig = this.pricingService.getPricingConfig();\r\n\r\n        await this.delay(1000);\r\n        this.saveMessage = 'Pricing settings saved successfully! New books will use updated pricing.';\r\n        setTimeout(() => this.saveMessage = '', 3000);\r\n      } catch (error) {\r\n        console.error('Error saving pricing settings:', error);\r\n        this.saveMessage = 'Error saving pricing settings. Please try again.';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    } else {\r\n      this.saveMessage = 'Please correct the form errors before saving.';\r\n      setTimeout(() => this.saveMessage = '', 3000);\r\n    }\r\n  }\r\n\r\n  resetToDefaults() {\r\n    if (confirm('Are you sure you want to reset all settings to default values? This action cannot be undone.')) {\r\n      // Reset forms to default values\r\n      if (this.activeTab === 'general') {\r\n        this.generalForm.reset();\r\n        this.generalForm.patchValue(this.siteSettings);\r\n      } else if (this.activeTab === 'notifications') {\r\n        this.notificationForm.reset();\r\n        this.notificationForm.patchValue(this.notificationSettings);\r\n      } else if (this.activeTab === 'security') {\r\n        this.securityForm.reset();\r\n        this.securityForm.patchValue(this.securitySettings);\r\n      } else if (this.activeTab === 'pricing') {\r\n        // Reset pricing to default configuration\r\n        this.pricingService.resetToDefaults();\r\n        this.pricingConfig = this.pricingService.getPricingConfig();\r\n        this.pricingForm.reset();\r\n        this.pricingForm.patchValue({\r\n          // Base prices\r\n          fiction: this.pricingConfig.basePrices.fiction,\r\n          programming: this.pricingConfig.basePrices.programming,\r\n          science: this.pricingConfig.basePrices.science,\r\n          history: this.pricingConfig.basePrices.history,\r\n          biography: this.pricingConfig.basePrices.biography,\r\n          business: this.pricingConfig.basePrices.business,\r\n          philosophy: this.pricingConfig.basePrices.philosophy,\r\n          psychology: this.pricingConfig.basePrices.psychology,\r\n          art: this.pricingConfig.basePrices.art,\r\n          health: this.pricingConfig.basePrices.health,\r\n          education: this.pricingConfig.basePrices.education,\r\n          religion: this.pricingConfig.basePrices.religion,\r\n          general: this.pricingConfig.basePrices['general'],\r\n          \r\n          // Modifiers\r\n          bestsellerModifier: this.pricingConfig.modifiers.bestseller,\r\n          featuredModifier: this.pricingConfig.modifiers.featured,\r\n          newBookModifier: this.pricingConfig.modifiers.newBook,\r\n          \r\n          // Page count modifiers\r\n          under200Pages: this.pricingConfig.modifiers.pageCount.under200,\r\n          between200And400Pages: this.pricingConfig.modifiers.pageCount.between200And400,\r\n          between400And600Pages: this.pricingConfig.modifiers.pageCount.between400And600,\r\n          over600Pages: this.pricingConfig.modifiers.pageCount.over600,\r\n          \r\n          // Published year modifiers\r\n          currentYear: this.pricingConfig.modifiers.publishedYear.current,\r\n          recentYears: this.pricingConfig.modifiers.publishedYear.recent,\r\n          olderBooks: this.pricingConfig.modifiers.publishedYear.older,\r\n          \r\n          // Author popularity modifiers\r\n          famousAuthor: this.pricingConfig.modifiers.authorPopularity.famous,\r\n          knownAuthor: this.pricingConfig.modifiers.authorPopularity.known,\r\n          unknownAuthor: this.pricingConfig.modifiers.authorPopularity.unknown\r\n        });\r\n      }\r\n      this.saveMessage = 'Settings reset to defaults';\r\n      setTimeout(() => this.saveMessage = '', 3000);\r\n    }\r\n  }\r\n\r\n  exportSettings() {\r\n    const settings = {\r\n      general: this.siteSettings,\r\n      notifications: this.notificationSettings,\r\n      security: this.securitySettings\r\n    };\r\n    \r\n    const dataStr = JSON.stringify(settings, null, 2);\r\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\r\n    const url = URL.createObjectURL(dataBlob);\r\n    \r\n    const link = document.createElement('a');\r\n    link.href = url;  \r\n    link.download = 'readify-settings.json';\r\n    link.click();\r\n    \r\n    URL.revokeObjectURL(url);\r\n    this.saveMessage = 'Settings exported successfully!';\r\n    setTimeout(() => this.saveMessage = '', 3000);\r\n  }\r\n\r\n  importSettings(event: any) {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        try {\r\n          const settings = JSON.parse(e.target?.result as string);\r\n          \r\n          if (settings.general) {\r\n            this.siteSettings = settings.general;\r\n            this.generalForm.patchValue({\r\n              ...settings.general,\r\n              ...settings.general.socialMedia\r\n            });\r\n          }\r\n          \r\n          if (settings.notifications) {\r\n            this.notificationSettings = settings.notifications;\r\n            this.notificationForm.patchValue(settings.notifications);\r\n          }\r\n          \r\n          if (settings.security) {\r\n            this.securitySettings = settings.security;\r\n            this.securityForm.patchValue(settings.security);\r\n          }\r\n          \r\n          this.saveMessage = 'Settings imported successfully!';\r\n          setTimeout(() => this.saveMessage = '', 3000);\r\n        } catch (error) {\r\n          console.error('Error importing settings:', error);\r\n          this.saveMessage = 'Error importing settings. Please check the file format.';\r\n        }\r\n      };\r\n      reader.readAsText(file);\r\n    }\r\n  }\r\n\r\n  getFormFieldError(form: FormGroup, fieldName: string): string {\r\n    const field = form.get(fieldName);\r\n    if (field && field.errors && field.touched) {\r\n      if (field.errors['required']) return `${fieldName} is required`;\r\n      if (field.errors['email']) return 'Invalid email format';\r\n      if (field.errors['minlength']) return `${fieldName} is too short`;\r\n      if (field.errors['min']) return `Value must be greater than minimum`;\r\n      if (field.errors['max']) return `Value exceeds maximum`;\r\n      if (field.errors['pattern']) return `Invalid ${fieldName} format`;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  private delay(ms: number): Promise<void> {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n}\r\n", "<div class=\"settings\">\r\n  <div class=\"page-header\">\r\n    <h1>Settings</h1>\r\n    <div class=\"header-actions\">\r\n      <button class=\"btn btn-secondary\" (click)=\"exportSettings()\">\r\n        <span class=\"btn-icon\">📤</span>\r\n        Export Settings\r\n      </button>\r\n      <label class=\"btn btn-secondary import-btn\">\r\n        <span class=\"btn-icon\">📥</span>\r\n        Import Settings\r\n        <input type=\"file\" accept=\".json\" (change)=\"importSettings($event)\" hidden>\r\n      </label>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Success/Error Message -->\r\n  <div class=\"message-bar\" *ngIf=\"saveMessage\" [class.success]=\"!saveMessage.includes('Error')\">\r\n    {{ saveMessage }}\r\n  </div>\r\n\r\n  <!-- Settings Tabs -->\r\n  <div class=\"settings-container\">\r\n    <nav class=\"settings-tabs\">\r\n      <button \r\n        class=\"tab-button\" \r\n        [class.active]=\"activeTab === 'general'\"\r\n        (click)=\"setActiveTab('general')\">\r\n        <span class=\"tab-icon\">⚙️</span>\r\n        General\r\n      </button>\r\n      <button \r\n        class=\"tab-button\" \r\n        [class.active]=\"activeTab === 'notifications'\"\r\n        (click)=\"setActiveTab('notifications')\">\r\n        <span class=\"tab-icon\">🔔</span>\r\n        Notifications\r\n      </button>\r\n      <button \r\n        class=\"tab-button\" \r\n        [class.active]=\"activeTab === 'security'\"\r\n        (click)=\"setActiveTab('security')\">\r\n        <span class=\"tab-icon\">🔒</span>\r\n        Security\r\n      </button>\r\n      <button \r\n        class=\"tab-button\" \r\n        [class.active]=\"activeTab === 'pricing'\"\r\n        (click)=\"setActiveTab('pricing')\">\r\n        <span class=\"tab-icon\">💰</span>\r\n        Pricing\r\n      </button>\r\n    </nav>\r\n\r\n    <!-- General Settings Tab -->\r\n    <div class=\"tab-content\" *ngIf=\"activeTab === 'general'\">\r\n      <form [formGroup]=\"generalForm\" (ngSubmit)=\"saveGeneralSettings()\" class=\"settings-form\">\r\n        <div class=\"form-section\">\r\n          <h3>Site Information</h3>\r\n          <div class=\"form-grid\">\r\n            <div class=\"form-group\">\r\n              <label for=\"siteName\">Site Name *</label>\r\n              <input \r\n                type=\"text\" \r\n                id=\"siteName\" \r\n                formControlName=\"siteName\" \r\n                class=\"form-input\"\r\n                [class.error]=\"generalForm.get('siteName')?.invalid && generalForm.get('siteName')?.touched\">\r\n              <span class=\"error-message\" *ngIf=\"getFormFieldError(generalForm, 'siteName')\">\r\n                {{ getFormFieldError(generalForm, 'siteName') }}\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"form-group full-width\">\r\n              <label for=\"siteDescription\">Site Description *</label>\r\n              <textarea \r\n                id=\"siteDescription\" \r\n                formControlName=\"siteDescription\" \r\n                class=\"form-textarea\"\r\n                rows=\"3\"\r\n                [class.error]=\"generalForm.get('siteDescription')?.invalid && generalForm.get('siteDescription')?.touched\"></textarea>\r\n              <span class=\"error-message\" *ngIf=\"getFormFieldError(generalForm, 'siteDescription')\">\r\n                {{ getFormFieldError(generalForm, 'siteDescription') }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-section\">\r\n          <h3>Contact Information</h3>\r\n          <div class=\"form-grid\">\r\n            <div class=\"form-group\">\r\n              <label for=\"contactEmail\">Contact Email *</label>\r\n              <input \r\n                type=\"email\" \r\n                id=\"contactEmail\" \r\n                formControlName=\"contactEmail\" \r\n                class=\"form-input\"\r\n                [class.error]=\"generalForm.get('contactEmail')?.invalid && generalForm.get('contactEmail')?.touched\">\r\n              <span class=\"error-message\" *ngIf=\"getFormFieldError(generalForm, 'contactEmail')\">\r\n                {{ getFormFieldError(generalForm, 'contactEmail') }}\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"supportEmail\">Support Email *</label>\r\n              <input \r\n                type=\"email\" \r\n                id=\"supportEmail\" \r\n                formControlName=\"supportEmail\" \r\n                class=\"form-input\"\r\n                [class.error]=\"generalForm.get('supportEmail')?.invalid && generalForm.get('supportEmail')?.touched\">\r\n              <span class=\"error-message\" *ngIf=\"getFormFieldError(generalForm, 'supportEmail')\">\r\n                {{ getFormFieldError(generalForm, 'supportEmail') }}\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"phoneNumber\">Phone Number *</label>\r\n              <input \r\n                type=\"tel\" \r\n                id=\"phoneNumber\" \r\n                formControlName=\"phoneNumber\" \r\n                class=\"form-input\"\r\n                [class.error]=\"generalForm.get('phoneNumber')?.invalid && generalForm.get('phoneNumber')?.touched\">\r\n              <span class=\"error-message\" *ngIf=\"getFormFieldError(generalForm, 'phoneNumber')\">\r\n                {{ getFormFieldError(generalForm, 'phoneNumber') }}\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"businessHours\">Business Hours *</label>\r\n              <input \r\n                type=\"text\" \r\n                id=\"businessHours\" \r\n                formControlName=\"businessHours\" \r\n                class=\"form-input\"\r\n                placeholder=\"e.g., Mon-Fri: 9AM-6PM\"\r\n                [class.error]=\"generalForm.get('businessHours')?.invalid && generalForm.get('businessHours')?.touched\">\r\n              <span class=\"error-message\" *ngIf=\"getFormFieldError(generalForm, 'businessHours')\">\r\n                {{ getFormFieldError(generalForm, 'businessHours') }}\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"form-group full-width\">\r\n              <label for=\"address\">Address *</label>\r\n              <textarea \r\n                id=\"address\" \r\n                formControlName=\"address\" \r\n                class=\"form-textarea\"\r\n                rows=\"2\"\r\n                [class.error]=\"generalForm.get('address')?.invalid && generalForm.get('address')?.touched\"></textarea>\r\n              <span class=\"error-message\" *ngIf=\"getFormFieldError(generalForm, 'address')\">\r\n                {{ getFormFieldError(generalForm, 'address') }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-section\">\r\n          <h3>Social Media</h3>\r\n          <div class=\"form-grid\">\r\n            <div class=\"form-group\">\r\n              <label for=\"facebook\">Facebook URL</label>\r\n              <input \r\n                type=\"url\" \r\n                id=\"facebook\" \r\n                formControlName=\"facebook\" \r\n                class=\"form-input\"\r\n                placeholder=\"https://facebook.com/yourpage\"\r\n                [class.error]=\"generalForm.get('facebook')?.invalid && generalForm.get('facebook')?.touched\">\r\n              <span class=\"error-message\" *ngIf=\"getFormFieldError(generalForm, 'facebook')\">\r\n                {{ getFormFieldError(generalForm, 'facebook') }}\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"twitter\">Twitter URL</label>\r\n              <input \r\n                type=\"url\" \r\n                id=\"twitter\" \r\n                formControlName=\"twitter\" \r\n                class=\"form-input\"\r\n                placeholder=\"https://twitter.com/yourhandle\"\r\n                [class.error]=\"generalForm.get('twitter')?.invalid && generalForm.get('twitter')?.touched\">\r\n              <span class=\"error-message\" *ngIf=\"getFormFieldError(generalForm, 'twitter')\">\r\n                {{ getFormFieldError(generalForm, 'twitter') }}\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"instagram\">Instagram URL</label>\r\n              <input \r\n                type=\"url\" \r\n                id=\"instagram\" \r\n                formControlName=\"instagram\" \r\n                class=\"form-input\"\r\n                placeholder=\"https://instagram.com/yourhandle\"\r\n                [class.error]=\"generalForm.get('instagram')?.invalid && generalForm.get('instagram')?.touched\">\r\n              <span class=\"error-message\" *ngIf=\"getFormFieldError(generalForm, 'instagram')\">\r\n                {{ getFormFieldError(generalForm, 'instagram') }}\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"linkedin\">LinkedIn URL</label>\r\n              <input \r\n                type=\"url\" \r\n                id=\"linkedin\" \r\n                formControlName=\"linkedin\" \r\n                class=\"form-input\"\r\n                placeholder=\"https://linkedin.com/company/yourcompany\"\r\n                [class.error]=\"generalForm.get('linkedin')?.invalid && generalForm.get('linkedin')?.touched\">\r\n              <span class=\"error-message\" *ngIf=\"getFormFieldError(generalForm, 'linkedin')\">\r\n                {{ getFormFieldError(generalForm, 'linkedin') }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-section\">\r\n          <h3>Commerce Settings</h3>\r\n          <div class=\"form-grid\">\r\n            <div class=\"form-group\">\r\n              <label for=\"currency\">Currency *</label>\r\n              <select \r\n                id=\"currency\" \r\n                formControlName=\"currency\" \r\n                class=\"form-input\"\r\n                [class.error]=\"generalForm.get('currency')?.invalid && generalForm.get('currency')?.touched\">\r\n                <option *ngFor=\"let currency of currencies\" [value]=\"currency.code\">\r\n                  {{ currency.name }} ({{ currency.symbol }})\r\n                </option>\r\n              </select>\r\n              <span class=\"error-message\" *ngIf=\"getFormFieldError(generalForm, 'currency')\">\r\n                {{ getFormFieldError(generalForm, 'currency') }}\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"taxRate\">Tax Rate (%) *</label>\r\n              <input \r\n                type=\"number\" \r\n                id=\"taxRate\" \r\n                formControlName=\"taxRate\" \r\n                class=\"form-input\"\r\n                step=\"0.1\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                [class.error]=\"generalForm.get('taxRate')?.invalid && generalForm.get('taxRate')?.touched\">\r\n              <span class=\"error-message\" *ngIf=\"getFormFieldError(generalForm, 'taxRate')\">\r\n                {{ getFormFieldError(generalForm, 'taxRate') }}\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"shippingCost\">Shipping Cost *</label>\r\n              <input \r\n                type=\"number\" \r\n                id=\"shippingCost\" \r\n                formControlName=\"shippingCost\" \r\n                class=\"form-input\"\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                [class.error]=\"generalForm.get('shippingCost')?.invalid && generalForm.get('shippingCost')?.touched\">\r\n              <span class=\"error-message\" *ngIf=\"getFormFieldError(generalForm, 'shippingCost')\">\r\n                {{ getFormFieldError(generalForm, 'shippingCost') }}\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"freeShippingThreshold\">Free Shipping Threshold *</label>\r\n              <input \r\n                type=\"number\" \r\n                id=\"freeShippingThreshold\" \r\n                formControlName=\"freeShippingThreshold\" \r\n                class=\"form-input\"\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                [class.error]=\"generalForm.get('freeShippingThreshold')?.invalid && generalForm.get('freeShippingThreshold')?.touched\">\r\n              <span class=\"error-message\" *ngIf=\"getFormFieldError(generalForm, 'freeShippingThreshold')\">\r\n                {{ getFormFieldError(generalForm, 'freeShippingThreshold') }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-actions\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"resetToDefaults()\">\r\n            Reset to Defaults\r\n          </button>\r\n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"generalForm.invalid || loading\">\r\n            <span class=\"btn-icon\" *ngIf=\"loading\">⏳</span>\r\n            <span class=\"btn-icon\" *ngIf=\"!loading\">💾</span>\r\n            {{ loading ? 'Saving...' : 'Save General Settings' }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- Notifications Settings Tab -->\r\n    <div class=\"tab-content\" *ngIf=\"activeTab === 'notifications'\">\r\n      <form [formGroup]=\"notificationForm\" (ngSubmit)=\"saveNotificationSettings()\" class=\"settings-form\">\r\n        <div class=\"form-section\">\r\n          <h3>Email Notifications</h3>\r\n          <div class=\"notification-settings\">\r\n            <div class=\"notification-item\">\r\n              <div class=\"notification-info\">\r\n                <h4>Email Notifications</h4>\r\n                <p>Enable email notifications for admin activities</p>\r\n              </div>\r\n              <label class=\"toggle-switch\">\r\n                <input type=\"checkbox\" formControlName=\"emailNotifications\">\r\n                <span class=\"toggle-slider\"></span>\r\n              </label>\r\n            </div>\r\n            \r\n            <div class=\"notification-item\">\r\n              <div class=\"notification-info\">\r\n                <h4>Order Notifications</h4>\r\n                <p>Receive notifications when new orders are placed</p>\r\n              </div>\r\n              <label class=\"toggle-switch\">\r\n                <input type=\"checkbox\" formControlName=\"orderNotifications\">\r\n                <span class=\"toggle-slider\"></span>\r\n              </label>\r\n            </div>\r\n            \r\n            <div class=\"notification-item\">\r\n              <div class=\"notification-info\">\r\n                <h4>User Registration Notifications</h4>\r\n                <p>Get notified when new users register</p>\r\n              </div>\r\n              <label class=\"toggle-switch\">\r\n                <input type=\"checkbox\" formControlName=\"userRegistrationNotifications\">\r\n                <span class=\"toggle-slider\"></span>\r\n              </label>\r\n            </div>\r\n            \r\n            <div class=\"notification-item\">\r\n              <div class=\"notification-info\">\r\n                <h4>Low Stock Notifications</h4>\r\n                <p>Alert when book inventory is running low</p>\r\n              </div>\r\n              <label class=\"toggle-switch\">\r\n                <input type=\"checkbox\" formControlName=\"lowStockNotifications\">\r\n                <span class=\"toggle-slider\"></span>\r\n              </label>\r\n            </div>\r\n            \r\n            <div class=\"notification-item\">\r\n              <div class=\"notification-info\">\r\n                <h4>Review Notifications</h4>\r\n                <p>Notifications for new book reviews</p>\r\n              </div>\r\n              <label class=\"toggle-switch\">\r\n                <input type=\"checkbox\" formControlName=\"reviewNotifications\">\r\n                <span class=\"toggle-slider\"></span>\r\n              </label>\r\n            </div>\r\n            \r\n            <div class=\"notification-item\">\r\n              <div class=\"notification-info\">\r\n                <h4>Newsletter Enabled</h4>\r\n                <p>Enable newsletter functionality for users</p>\r\n              </div>\r\n              <label class=\"toggle-switch\">\r\n                <input type=\"checkbox\" formControlName=\"newsletterEnabled\">\r\n                <span class=\"toggle-slider\"></span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-actions\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"resetToDefaults()\">\r\n            Reset to Defaults\r\n          </button>\r\n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"loading\">\r\n            <span class=\"btn-icon\" *ngIf=\"loading\">⏳</span>\r\n            <span class=\"btn-icon\" *ngIf=\"!loading\">💾</span>\r\n            {{ loading ? 'Saving...' : 'Save Notification Settings' }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- Security Settings Tab -->\r\n    <div class=\"tab-content\" *ngIf=\"activeTab === 'security'\">\r\n      <form [formGroup]=\"securityForm\" (ngSubmit)=\"saveSecuritySettings()\" class=\"settings-form\">\r\n        <div class=\"form-section\">\r\n          <h3>Authentication Settings</h3>\r\n          <div class=\"security-settings\">\r\n            <div class=\"security-item\">\r\n              <div class=\"security-info\">\r\n                <h4>Two-Factor Authentication</h4>\r\n                <p>Require 2FA for admin accounts</p>\r\n              </div>\r\n              <label class=\"toggle-switch\">\r\n                <input type=\"checkbox\" formControlName=\"twoFactorAuth\">\r\n                <span class=\"toggle-slider\"></span>\r\n              </label>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"sessionTimeout\">Session Timeout *</label>\r\n              <select \r\n                id=\"sessionTimeout\" \r\n                formControlName=\"sessionTimeout\" \r\n                class=\"form-input\"\r\n                [class.error]=\"securityForm.get('sessionTimeout')?.invalid && securityForm.get('sessionTimeout')?.touched\">\r\n                <option *ngFor=\"let timeout of sessionTimeouts\" [value]=\"timeout.value\">\r\n                  {{ timeout.label }}\r\n                </option>\r\n              </select>\r\n              <span class=\"error-message\" *ngIf=\"getFormFieldError(securityForm, 'sessionTimeout')\">\r\n                {{ getFormFieldError(securityForm, 'sessionTimeout') }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-section\">\r\n          <h3>Password Policy</h3>\r\n          <div class=\"form-grid\">\r\n            <div class=\"form-group\">\r\n              <label for=\"passwordMinLength\">Minimum Password Length *</label>\r\n              <input \r\n                type=\"number\" \r\n                id=\"passwordMinLength\" \r\n                formControlName=\"passwordMinLength\" \r\n                class=\"form-input\"\r\n                min=\"6\"\r\n                max=\"20\"\r\n                [class.error]=\"securityForm.get('passwordMinLength')?.invalid && securityForm.get('passwordMinLength')?.touched\">\r\n              <span class=\"error-message\" *ngIf=\"getFormFieldError(securityForm, 'passwordMinLength')\">\r\n                {{ getFormFieldError(securityForm, 'passwordMinLength') }}\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"security-item\">\r\n              <div class=\"security-info\">\r\n                <h4>Require Special Characters</h4>\r\n                <p>Passwords must contain special characters</p>\r\n              </div>\r\n              <label class=\"toggle-switch\">\r\n                <input type=\"checkbox\" formControlName=\"requireSpecialChars\">\r\n                <span class=\"toggle-slider\"></span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-section\">\r\n          <h3>Account Security</h3>\r\n          <div class=\"form-grid\">\r\n            <div class=\"form-group\">\r\n              <label for=\"maxLoginAttempts\">Max Login Attempts *</label>\r\n              <input \r\n                type=\"number\" \r\n                id=\"maxLoginAttempts\" \r\n                formControlName=\"maxLoginAttempts\" \r\n                class=\"form-input\"\r\n                min=\"3\"\r\n                max=\"10\"\r\n                [class.error]=\"securityForm.get('maxLoginAttempts')?.invalid && securityForm.get('maxLoginAttempts')?.touched\">\r\n              <span class=\"error-message\" *ngIf=\"getFormFieldError(securityForm, 'maxLoginAttempts')\">\r\n                {{ getFormFieldError(securityForm, 'maxLoginAttempts') }}\r\n              </span>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"accountLockoutDuration\">Account Lockout Duration (minutes) *</label>\r\n              <input \r\n                type=\"number\" \r\n                id=\"accountLockoutDuration\" \r\n                formControlName=\"accountLockoutDuration\" \r\n                class=\"form-input\"\r\n                min=\"5\"\r\n                max=\"60\"\r\n                [class.error]=\"securityForm.get('accountLockoutDuration')?.invalid && securityForm.get('accountLockoutDuration')?.touched\">\r\n              <span class=\"error-message\" *ngIf=\"getFormFieldError(securityForm, 'accountLockoutDuration')\">\r\n                {{ getFormFieldError(securityForm, 'accountLockoutDuration') }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-actions\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"resetToDefaults()\">\r\n            Reset to Defaults\r\n          </button>\r\n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"securityForm.invalid || loading\">\r\n            <span class=\"btn-icon\" *ngIf=\"loading\">⏳</span>\r\n            <span class=\"btn-icon\" *ngIf=\"!loading\">💾</span>\r\n            {{ loading ? 'Saving...' : 'Save Security Settings' }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- Pricing Settings Tab -->\r\n    <div class=\"tab-content\" *ngIf=\"activeTab === 'pricing'\">\r\n      <form [formGroup]=\"pricingForm\" (ngSubmit)=\"savePricingSettings()\" class=\"settings-form\">\r\n        <div class=\"form-section\">\r\n          <h3>📚 Base Prices by Category</h3>\r\n          <p>Set the base price for each book category (in USD)</p>\r\n          \r\n          <div class=\"form-grid\">\r\n            <div class=\"form-group\">\r\n              <label for=\"fiction\">Fiction</label>\r\n              <div class=\"input-group\">\r\n                <span class=\"input-prefix\">$</span>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"fiction\" \r\n                  formControlName=\"fiction\"\r\n                  step=\"0.01\"\r\n                  min=\"0\"\r\n                  [class.error]=\"pricingForm.get('fiction')?.invalid && pricingForm.get('fiction')?.touched\">\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"programming\">Programming</label>\r\n              <div class=\"input-group\">\r\n                <span class=\"input-prefix\">$</span>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"programming\" \r\n                  formControlName=\"programming\"\r\n                  step=\"0.01\"\r\n                  min=\"0\"\r\n                  [class.error]=\"pricingForm.get('programming')?.invalid && pricingForm.get('programming')?.touched\">\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"science\">Science</label>\r\n              <div class=\"input-group\">\r\n                <span class=\"input-prefix\">$</span>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"science\" \r\n                  formControlName=\"science\"\r\n                  step=\"0.01\"\r\n                  min=\"0\"\r\n                  [class.error]=\"pricingForm.get('science')?.invalid && pricingForm.get('science')?.touched\">\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"history\">History</label>\r\n              <div class=\"input-group\">\r\n                <span class=\"input-prefix\">$</span>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"history\" \r\n                  formControlName=\"history\"\r\n                  step=\"0.01\"\r\n                  min=\"0\"\r\n                  [class.error]=\"pricingForm.get('history')?.invalid && pricingForm.get('history')?.touched\">\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"biography\">Biography</label>\r\n              <div class=\"input-group\">\r\n                <span class=\"input-prefix\">$</span>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"biography\" \r\n                  formControlName=\"biography\"\r\n                  step=\"0.01\"\r\n                  min=\"0\"\r\n                  [class.error]=\"pricingForm.get('biography')?.invalid && pricingForm.get('biography')?.touched\">\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"business\">Business</label>\r\n              <div class=\"input-group\">\r\n                <span class=\"input-prefix\">$</span>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"business\" \r\n                  formControlName=\"business\"\r\n                  step=\"0.01\"\r\n                  min=\"0\"\r\n                  [class.error]=\"pricingForm.get('business')?.invalid && pricingForm.get('business')?.touched\">\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"philosophy\">Philosophy</label>\r\n              <div class=\"input-group\">\r\n                <span class=\"input-prefix\">$</span>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"philosophy\" \r\n                  formControlName=\"philosophy\"\r\n                  step=\"0.01\"\r\n                  min=\"0\"\r\n                  [class.error]=\"pricingForm.get('philosophy')?.invalid && pricingForm.get('philosophy')?.touched\">\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"psychology\">Psychology</label>\r\n              <div class=\"input-group\">\r\n                <span class=\"input-prefix\">$</span>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"psychology\" \r\n                  formControlName=\"psychology\"\r\n                  step=\"0.01\"\r\n                  min=\"0\"\r\n                  [class.error]=\"pricingForm.get('psychology')?.invalid && pricingForm.get('psychology')?.touched\">\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"art\">Art</label>\r\n              <div class=\"input-group\">\r\n                <span class=\"input-prefix\">$</span>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"art\" \r\n                  formControlName=\"art\"\r\n                  step=\"0.01\"\r\n                  min=\"0\"\r\n                  [class.error]=\"pricingForm.get('art')?.invalid && pricingForm.get('art')?.touched\">\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"health\">Health</label>\r\n              <div class=\"input-group\">\r\n                <span class=\"input-prefix\">$</span>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"health\" \r\n                  formControlName=\"health\"\r\n                  step=\"0.01\"\r\n                  min=\"0\"\r\n                  [class.error]=\"pricingForm.get('health')?.invalid && pricingForm.get('health')?.touched\">\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"education\">Education</label>\r\n              <div class=\"input-group\">\r\n                <span class=\"input-prefix\">$</span>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"education\" \r\n                  formControlName=\"education\"\r\n                  step=\"0.01\"\r\n                  min=\"0\"\r\n                  [class.error]=\"pricingForm.get('education')?.invalid && pricingForm.get('education')?.touched\">\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"religion\">Religion</label>\r\n              <div class=\"input-group\">\r\n                <span class=\"input-prefix\">$</span>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"religion\" \r\n                  formControlName=\"religion\"\r\n                  step=\"0.01\"\r\n                  min=\"0\"\r\n                  [class.error]=\"pricingForm.get('religion')?.invalid && pricingForm.get('religion')?.touched\">\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"general\">General</label>\r\n              <div class=\"input-group\">\r\n                <span class=\"input-prefix\">$</span>\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"general\" \r\n                  formControlName=\"general\"\r\n                  step=\"0.01\"\r\n                  min=\"0\"\r\n                  [class.error]=\"pricingForm.get('general')?.invalid && pricingForm.get('general')?.touched\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-section\">\r\n          <h3>⭐ Price Modifiers</h3>\r\n          <p>Multipliers applied to base prices (1.0 = no change, 1.5 = 50% increase, 0.8 = 20% decrease)</p>\r\n          \r\n          <div class=\"form-grid\">\r\n            <div class=\"form-group\">\r\n              <label for=\"bestsellerModifier\">Bestseller Multiplier</label>\r\n              <input \r\n                type=\"number\" \r\n                id=\"bestsellerModifier\" \r\n                formControlName=\"bestsellerModifier\"\r\n                step=\"0.1\"\r\n                min=\"0.1\"\r\n                max=\"5\"\r\n                [class.error]=\"pricingForm.get('bestsellerModifier')?.invalid && pricingForm.get('bestsellerModifier')?.touched\">\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"featuredModifier\">Featured Book Multiplier</label>\r\n              <input \r\n                type=\"number\" \r\n                id=\"featuredModifier\" \r\n                formControlName=\"featuredModifier\"\r\n                step=\"0.1\"\r\n                min=\"0.1\"\r\n                max=\"5\"\r\n                [class.error]=\"pricingForm.get('featuredModifier')?.invalid && pricingForm.get('featuredModifier')?.touched\">\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"newBookModifier\">New Release Multiplier</label>\r\n              <input \r\n                type=\"number\" \r\n                id=\"newBookModifier\" \r\n                formControlName=\"newBookModifier\"\r\n                step=\"0.1\"\r\n                min=\"0.1\"\r\n                max=\"5\"\r\n                [class.error]=\"pricingForm.get('newBookModifier')?.invalid && pricingForm.get('newBookModifier')?.touched\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-section\">\r\n          <h3>📄 Page Count Modifiers</h3>\r\n          <p>Price adjustments based on book length</p>\r\n          \r\n          <div class=\"form-grid\">\r\n            <div class=\"form-group\">\r\n              <label for=\"under200Pages\">Under 200 pages</label>\r\n              <input \r\n                type=\"number\" \r\n                id=\"under200Pages\" \r\n                formControlName=\"under200Pages\"\r\n                step=\"0.1\"\r\n                min=\"0.1\"\r\n                max=\"5\"\r\n                [class.error]=\"pricingForm.get('under200Pages')?.invalid && pricingForm.get('under200Pages')?.touched\">\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"between200And400Pages\">200-400 pages</label>\r\n              <input \r\n                type=\"number\" \r\n                id=\"between200And400Pages\" \r\n                formControlName=\"between200And400Pages\"\r\n                step=\"0.1\"\r\n                min=\"0.1\"\r\n                max=\"5\"\r\n                [class.error]=\"pricingForm.get('between200And400Pages')?.invalid && pricingForm.get('between200And400Pages')?.touched\">\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"between400And600Pages\">400-600 pages</label>\r\n              <input \r\n                type=\"number\" \r\n                id=\"between400And600Pages\" \r\n                formControlName=\"between400And600Pages\"\r\n                step=\"0.1\"\r\n                min=\"0.1\"\r\n                max=\"5\"\r\n                [class.error]=\"pricingForm.get('between400And600Pages')?.invalid && pricingForm.get('between400And600Pages')?.touched\">\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"over600Pages\">Over 600 pages</label>\r\n              <input \r\n                type=\"number\" \r\n                id=\"over600Pages\" \r\n                formControlName=\"over600Pages\"\r\n                step=\"0.1\"\r\n                min=\"0.1\"\r\n                max=\"5\"\r\n                [class.error]=\"pricingForm.get('over600Pages')?.invalid && pricingForm.get('over600Pages')?.touched\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-section\">\r\n          <h3>📅 Publication Date Modifiers</h3>\r\n          <p>Price adjustments based on when the book was published</p>\r\n          \r\n          <div class=\"form-grid\">\r\n            <div class=\"form-group\">\r\n              <label for=\"currentYear\">Current Year (2025)</label>\r\n              <input \r\n                type=\"number\" \r\n                id=\"currentYear\" \r\n                formControlName=\"currentYear\"\r\n                step=\"0.1\"\r\n                min=\"0.1\"\r\n                max=\"5\"\r\n                [class.error]=\"pricingForm.get('currentYear')?.invalid && pricingForm.get('currentYear')?.touched\">\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"recentYears\">Recent (Last 3 years)</label>\r\n              <input \r\n                type=\"number\" \r\n                id=\"recentYears\" \r\n                formControlName=\"recentYears\"\r\n                step=\"0.1\"\r\n                min=\"0.1\"\r\n                max=\"5\"\r\n                [class.error]=\"pricingForm.get('recentYears')?.invalid && pricingForm.get('recentYears')?.touched\">\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"olderBooks\">Older Books (3+ years)</label>\r\n              <input \r\n                type=\"number\" \r\n                id=\"olderBooks\" \r\n                formControlName=\"olderBooks\"\r\n                step=\"0.1\"\r\n                min=\"0.1\"\r\n                max=\"5\"\r\n                [class.error]=\"pricingForm.get('olderBooks')?.invalid && pricingForm.get('olderBooks')?.touched\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-section\">\r\n          <h3>👤 Author Popularity Modifiers</h3>\r\n          <p>Price adjustments based on author recognition</p>\r\n          \r\n          <div class=\"form-grid\">\r\n            <div class=\"form-group\">\r\n              <label for=\"famousAuthor\">Famous Authors</label>\r\n              <input \r\n                type=\"number\" \r\n                id=\"famousAuthor\" \r\n                formControlName=\"famousAuthor\"\r\n                step=\"0.1\"\r\n                min=\"0.1\"\r\n                max=\"5\"\r\n                [class.error]=\"pricingForm.get('famousAuthor')?.invalid && pricingForm.get('famousAuthor')?.touched\">\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"knownAuthor\">Known Authors</label>\r\n              <input \r\n                type=\"number\" \r\n                id=\"knownAuthor\" \r\n                formControlName=\"knownAuthor\"\r\n                step=\"0.1\"\r\n                min=\"0.1\"\r\n                max=\"5\"\r\n                [class.error]=\"pricingForm.get('knownAuthor')?.invalid && pricingForm.get('knownAuthor')?.touched\">\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"unknownAuthor\">Unknown Authors</label>\r\n              <input \r\n                type=\"number\" \r\n                id=\"unknownAuthor\" \r\n                formControlName=\"unknownAuthor\"\r\n                step=\"0.1\"\r\n                min=\"0.1\"\r\n                max=\"5\"\r\n                [class.error]=\"pricingForm.get('unknownAuthor')?.invalid && pricingForm.get('unknownAuthor')?.touched\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-actions\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"resetToDefaults()\">\r\n            Reset to Defaults\r\n          </button>\r\n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"pricingForm.invalid || loading\">\r\n            <span class=\"btn-icon\" *ngIf=\"loading\">⏳</span>\r\n            <span class=\"btn-icon\" *ngIf=\"!loading\">💾</span>\r\n            {{ loading ? 'Saving...' : 'Save Pricing Settings' }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n", "import { Routes } from '@angular/router';\r\nimport { AdminLayoutComponent } from './admin-layout';\r\nimport { AdminDashboardComponent } from './dashboard/admin-dashboard';\r\nimport { BookManagementComponent } from './book-management/book-management';\r\nimport { UserManagementComponent } from './user-management/user-management';\r\nimport { AnalyticsComponent } from './analytics/analytics';\r\nimport { SettingsComponent } from './settings/settings';\r\n\r\nexport const adminRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminLayoutComponent,\r\n    children: [\r\n      { \r\n        path: '', \r\n        redirectTo: 'dashboard', \r\n        pathMatch: 'full' \r\n      },\r\n      { \r\n        path: 'dashboard', \r\n        component: AdminDashboardComponent \r\n      },\r\n      { \r\n        path: 'books', \r\n        component: BookManagementComponent \r\n      },\r\n      { \r\n        path: 'users', \r\n        component: UserManagementComponent \r\n      },\r\n      { \r\n        path: 'analytics', \r\n        component: AnalyticsComponent \r\n      },\r\n      { \r\n        path: 'settings', \r\n        component: SettingsComponent \r\n      }\r\n    ]\r\n  }\r\n];\r\n", "import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.authService.currentUserProfile$.pipe(\r\n      take(1),\r\n      map(profile => {\r\n        if (profile?.role === 'admin') {\r\n          return true;\r\n        } else {\r\n          // Redirect to home if not admin\r\n          this.router.navigate(['/']);\r\n          return false;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n", "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthService } from '../../core/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-admin-setup',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `\r\n    <div class=\"admin-setup-container\">\r\n      <div class=\"admin-setup-card\">\r\n        <h2>🔧 Admin Setup (Development Only)</h2>\r\n        <p>This is a development utility to promote users to admin role.</p>\r\n        \r\n        <div *ngIf=\"currentUser; else notLoggedIn\">\r\n          <p><strong>Current User:</strong> {{ currentUser.email }}</p>\r\n          <p><strong>Current Role:</strong> {{ isAdmin ? 'Admin' : 'User' }}</p>\r\n          \r\n          <div class=\"actions\">\r\n            <button \r\n              *ngIf=\"!isAdmin\" \r\n              (click)=\"promoteToAdmin()\" \r\n              [disabled]=\"loading\"\r\n              class=\"btn btn-primary\">\r\n              {{ loading ? 'Promoting...' : 'Promote to Admin' }}\r\n            </button>\r\n            \r\n            <button \r\n              *ngIf=\"isAdmin\" \r\n              (click)=\"navigateToAdmin()\"\r\n              class=\"btn btn-success\">\r\n              Go to Admin Panel\r\n            </button>\r\n            \r\n            <button \r\n              *ngIf=\"isAdmin\" \r\n              (click)=\"demoteFromAdmin()\" \r\n              [disabled]=\"loading\"\r\n              class=\"btn btn-warning\">\r\n              {{ loading ? 'Demoting...' : 'Demote from Admin' }}\r\n            </button>\r\n          </div>\r\n          \r\n          <div *ngIf=\"message\" [class]=\"messageClass\">\r\n            {{ message }}\r\n          </div>\r\n        </div>\r\n        \r\n        <ng-template #notLoggedIn>\r\n          <p>Please log in first to use this utility.</p>\r\n          <button (click)=\"navigateToLogin()\" class=\"btn btn-primary\">Go to Login</button>\r\n        </ng-template>\r\n        \r\n        <div class=\"warning\">\r\n          ⚠️ <strong>Warning:</strong> This component should only be used in development. \r\n          Remove it before production deployment.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .admin-setup-container {\r\n      min-height: 100vh;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n      padding: 20px;\r\n    }\r\n\r\n    .admin-setup-card {\r\n      background: white;\r\n      border-radius: 12px;\r\n      padding: 2rem;\r\n      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\r\n      max-width: 500px;\r\n      width: 100%;\r\n      text-align: center;\r\n    }\r\n\r\n    h2 {\r\n      color: #333;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    p {\r\n      color: #666;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    .actions {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 1rem;\r\n      margin: 2rem 0;\r\n    }\r\n\r\n    .btn {\r\n      padding: 12px 24px;\r\n      border: none;\r\n      border-radius: 8px;\r\n      font-weight: 600;\r\n      cursor: pointer;\r\n      transition: all 0.2s ease;\r\n      text-decoration: none;\r\n      display: inline-block;\r\n    }\r\n\r\n    .btn:disabled {\r\n      opacity: 0.6;\r\n      cursor: not-allowed;\r\n    }\r\n\r\n    .btn-primary {\r\n      background: #667eea;\r\n      color: white;\r\n    }\r\n\r\n    .btn-primary:hover:not(:disabled) {\r\n      background: #5a67d8;\r\n    }\r\n\r\n    .btn-success {\r\n      background: #48bb78;\r\n      color: white;\r\n    }\r\n\r\n    .btn-success:hover {\r\n      background: #38a169;\r\n    }\r\n\r\n    .btn-warning {\r\n      background: #ed8936;\r\n      color: white;\r\n    }\r\n\r\n    .btn-warning:hover:not(:disabled) {\r\n      background: #dd6b20;\r\n    }\r\n\r\n    .warning {\r\n      background: #fed7d7;\r\n      border: 1px solid #feb2b2;\r\n      border-radius: 8px;\r\n      padding: 1rem;\r\n      margin-top: 2rem;\r\n      color: #c53030;\r\n      font-size: 0.9rem;\r\n    }\r\n\r\n    .success-message {\r\n      background: #c6f6d5;\r\n      border: 1px solid #9ae6b4;\r\n      color: #276749;\r\n      padding: 0.75rem;\r\n      border-radius: 6px;\r\n      margin-top: 1rem;\r\n    }\r\n\r\n    .error-message {\r\n      background: #fed7d7;\r\n      border: 1px solid #feb2b2;\r\n      color: #c53030;\r\n      padding: 0.75rem;\r\n      border-radius: 6px;\r\n      margin-top: 1rem;\r\n    }\r\n  `]\r\n})\r\nexport class AdminSetupComponent {\r\n  currentUser: any = null;\r\n  isAdmin = false;\r\n  loading = false;\r\n  message = '';\r\n  messageClass = '';\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    // Subscribe to current user\r\n    this.authService.currentUser$.subscribe(user => {\r\n      this.currentUser = user;\r\n    });\r\n\r\n    // Subscribe to user profile to check admin status\r\n    this.authService.currentUserProfile$.subscribe(profile => {\r\n      this.isAdmin = profile?.role === 'admin';\r\n    });\r\n  }\r\n\r\n  async promoteToAdmin() {\r\n    if (!this.currentUser) return;\r\n\r\n    this.loading = true;\r\n    this.message = '';\r\n    \r\n    try {\r\n      await this.authService.promoteToAdmin(this.currentUser.uid);\r\n      this.message = 'Successfully promoted to admin!';\r\n      this.messageClass = 'success-message';\r\n    } catch (error) {\r\n      this.message = 'Failed to promote to admin. Please try again.';\r\n      this.messageClass = 'error-message';\r\n      console.error('Promotion error:', error);\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  async demoteFromAdmin() {\r\n    if (!this.currentUser) return;\r\n\r\n    this.loading = true;\r\n    this.message = '';\r\n    \r\n    try {\r\n      await this.authService.demoteFromAdmin(this.currentUser.uid);\r\n      this.message = 'Successfully demoted from admin.';\r\n      this.messageClass = 'success-message';\r\n    } catch (error) {\r\n      this.message = 'Failed to demote from admin. Please try again.';\r\n      this.messageClass = 'error-message';\r\n      console.error('Demotion error:', error);\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  navigateToAdmin() {\r\n    this.router.navigate(['/admin']);\r\n  }\r\n\r\n  navigateToLogin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n", "import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './features/home/home';\r\nimport { BookListComponent } from './features/book-list/book-list';\r\nimport { BookDetailComponent } from './features/book-detail/book-detail';\r\nimport { LoginComponent } from './features/login/login';\r\nimport { CartComponent } from './features/cart/cart';\r\nimport { adminRoutes } from './features/admin/admin.routes';\r\nimport { AdminGuard } from './core/guards/admin.guard';\r\nimport { AdminSetupComponent } from './features/admin-setup/admin-setup';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'cart', component: CartComponent },\r\n  { path: 'books/:id', loadComponent: () => import('./features/book-detail/book-detail').then(m => m.BookDetailComponent) },\r\n  { path: 'search', loadComponent: () => import('./features/open-library-search/open-library-search').then(m => m.OpenLibrarySearchComponent) },\r\n  { path: 'admin-setup', component: AdminSetupComponent }, // Development only - remove in production\r\n  { \r\n    path: 'admin', \r\n    children: adminRoutes,\r\n    canActivate: [AdminGuard]\r\n  },\r\n  { path: '**', redirectTo: '' } // Wildcard route for 404 page\r\n];", "import { ApplicationConfig, provideBrowserGlobalErrorListeners, provideZoneChangeDetection } from '@angular/core';\r\nimport { provideRouter } from '@angular/router';\r\nimport { provideHttpClient, withFetch } from '@angular/common/http';\r\n\r\nimport { routes } from './app.routes';\r\n\r\nexport const appConfig: ApplicationConfig = {\r\n  providers: [\r\n    provideBrowserGlobalErrorListeners(),\r\n    provideZoneChangeDetection({ eventCoalescing: true }),\r\n    provideRouter(routes),\r\n    provideHttpClient(withFetch())\r\n  ]\r\n};\r\n", "import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PricingService, Currency } from '../../core/services/pricing.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-currency-selector',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `\r\n    <div class=\"currency-selector\">\r\n      <div class=\"currency-dropdown\" [class.open]=\"isOpen\">\r\n        <button class=\"currency-toggle\" (click)=\"toggleDropdown()\">\r\n          <i class=\"fas fa-coins\" style=\"color: #ffd700; margin-right: 4px;\"></i>\r\n          <span class=\"currency-symbol\">{{ currentCurrency.symbol }}</span>\r\n          <span class=\"currency-code\">{{ currentCurrency.code }}</span>\r\n          <i class=\"fas fa-chevron-down\" [class.rotated]=\"isOpen\"></i>\r\n        </button>\r\n        \r\n        <div class=\"currency-options\" *ngIf=\"isOpen\">\r\n          <button \r\n            *ngFor=\"let currency of currencies\" \r\n            class=\"currency-option\"\r\n            [class.active]=\"currency.code === currentCurrency.code\"\r\n            (click)=\"selectCurrency(currency.code)\"\r\n          >\r\n            <span class=\"currency-symbol\">{{ currency.symbol }}</span>\r\n            <span class=\"currency-info\">\r\n              <span class=\"currency-code\">{{ currency.code }}</span>\r\n              <span class=\"currency-name\">{{ currency.name }}</span>\r\n            </span>\r\n            <i *ngIf=\"currency.code === currentCurrency.code\" class=\"fas fa-check\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .currency-selector {\r\n      position: relative;\r\n      z-index: 1000;\r\n    }\r\n\r\n    .currency-dropdown {\r\n      position: relative;\r\n    }\r\n\r\n    .currency-toggle {\r\n      background: #667eea;\r\n      border: 1px solid #5a67d8;\r\n      color: white;\r\n      padding: 8px 12px;\r\n      border-radius: 8px;\r\n      cursor: pointer;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      font-size: 0.9rem;\r\n      transition: all 0.3s ease;\r\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n\r\n      &:hover {\r\n        background: #5a67d8;\r\n        border-color: #4c51bf;\r\n        transform: translateY(-1px);\r\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\r\n      }\r\n\r\n      &:active {\r\n        transform: translateY(0);\r\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n      }\r\n\r\n      .currency-symbol {\r\n        font-weight: 600;\r\n        font-size: 1rem;\r\n        color: #ffd700;\r\n      }\r\n\r\n      .currency-code {\r\n        font-size: 0.8rem;\r\n        opacity: 0.95;\r\n      }\r\n\r\n      i {\r\n        font-size: 0.7rem;\r\n        transition: transform 0.3s ease;\r\n        \r\n        &.rotated {\r\n          transform: rotate(180deg);\r\n        }\r\n      }\r\n    }\r\n\r\n    .currency-options {\r\n      position: absolute;\r\n      top: 100%;\r\n      right: 0;\r\n      background: white;\r\n      border: 1px solid #e2e8f0;\r\n      border-radius: 12px;\r\n      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);\r\n      min-width: 200px;\r\n      overflow: hidden;\r\n      margin-top: 8px;\r\n      animation: slideDown 0.2s ease;\r\n      z-index: 1001;\r\n    }\r\n\r\n    .currency-option {\r\n      width: 100%;\r\n      padding: 12px 16px;\r\n      border: none;\r\n      background: white;\r\n      cursor: pointer;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 12px;\r\n      transition: background-color 0.2s ease;\r\n      color: #333;\r\n\r\n      &:hover {\r\n        background: #f7fafc;\r\n        color: #667eea;\r\n      }\r\n\r\n      &.active {\r\n        background: #667eea;\r\n        color: white;\r\n        \r\n        .currency-symbol {\r\n          color: #ffd700;\r\n        }\r\n        \r\n        .currency-code, .currency-name {\r\n          color: white;\r\n        }\r\n      }\r\n\r\n      .currency-symbol {\r\n        font-weight: 600;\r\n        font-size: 1.1rem;\r\n        width: 20px;\r\n        text-align: center;\r\n      }\r\n\r\n      .currency-info {\r\n        flex: 1;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        gap: 2px;\r\n      }\r\n\r\n      .currency-code {\r\n        font-weight: 600;\r\n        font-size: 0.9rem;\r\n      }\r\n\r\n      .currency-name {\r\n        font-size: 0.8rem;\r\n        color: #666;\r\n      }\r\n\r\n      i {\r\n        color: #4caf50;\r\n        font-size: 0.9rem;\r\n      }\r\n    }\r\n\r\n    @keyframes slideDown {\r\n      from {\r\n        opacity: 0;\r\n        transform: translateY(-10px);\r\n      }\r\n      to {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n      }\r\n    }\r\n\r\n    // For use in header context\r\n    :host-context(.header) .currency-toggle {\r\n      background: rgba(0, 0, 0, 0.1);\r\n      border-color: rgba(0, 0, 0, 0.2);\r\n      color: #333;\r\n\r\n      &:hover {\r\n        background: rgba(0, 0, 0, 0.15);\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class CurrencySelectorComponent implements OnInit, OnDestroy {\r\n  currencies: Currency[] = [];\r\n  currentCurrency: Currency = { code: 'USD', symbol: '$', name: 'US Dollar', rate: 1.0 };\r\n  isOpen: boolean = false;\r\n  private subscription: Subscription = new Subscription();\r\n\r\n  constructor(private pricingService: PricingService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.currencies = this.pricingService.getCurrencies();\r\n    \r\n    this.subscription.add(\r\n      this.pricingService.currency$.subscribe(currency => {\r\n        this.currentCurrency = currency;\r\n      })\r\n    );\r\n\r\n    // Close dropdown when clicking outside\r\n    document.addEventListener('click', this.closeDropdown.bind(this));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n    document.removeEventListener('click', this.closeDropdown.bind(this));\r\n  }\r\n\r\n  toggleDropdown(): void {\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  selectCurrency(currencyCode: string): void {\r\n    this.pricingService.setCurrency(currencyCode);\r\n    this.isOpen = false;\r\n  }\r\n\r\n  private closeDropdown(event: Event): void {\r\n    const target = event.target as HTMLElement;\r\n    if (!target.closest('.currency-selector')) {\r\n      this.isOpen = false;\r\n    }\r\n  }\r\n}\r\n", "import { Component, OnInit, OnDestroy, HostListener, Inject, PLATFORM_ID } from '@angular/core';\r\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\r\nimport { RouterModule, Router, NavigationEnd } from '@angular/router';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { AuthService, UserProfile } from '../../core/services/auth.service';\r\nimport { CartService, CartItem } from '../../core/services/cart.service';\r\nimport { User } from 'firebase/auth';\r\nimport { CurrencySelectorComponent } from '../currency-selector/currency-selector';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule, CurrencySelectorComponent],\r\n  templateUrl: './header.html',\r\n  styleUrl: './header.scss'\r\n})\r\nexport class Header implements OnInit, OnDestroy {\r\n  isMenuOpen = false;\r\n  activeSection = 'home';\r\n  currentUser: User | null = null;\r\n  currentUserProfile: UserProfile | null = null;\r\n  cartItemCount$: Observable<number>;\r\n  private routerSubscription?: Subscription;\r\n  private authSubscription?: Subscription;\r\n  private profileSubscription?: Subscription;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private cartService: CartService,\r\n    @Inject(PLATFORM_ID) private platformId: Object\r\n  ) {\r\n    // Subscribe to cart changes to show item count\r\n    this.cartItemCount$ = this.cartService.cart$.pipe(\r\n      filter(() => isPlatformBrowser(this.platformId)),\r\n      // Convert cart items to total count\r\n      map((cartItems: CartItem[]) => cartItems.reduce((total: number, item: CartItem) => total + item.quantity, 0))\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Listen to route changes\r\n    this.routerSubscription = this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe(() => {\r\n        this.checkCurrentRoute();\r\n      });\r\n\r\n    // Listen to authentication changes\r\n    this.authSubscription = this.authService.currentUser$.subscribe(user => {\r\n      this.currentUser = user;\r\n    });\r\n\r\n    // Listen to user profile changes\r\n    this.profileSubscription = this.authService.currentUserProfile$.subscribe(profile => {\r\n      this.currentUserProfile = profile;\r\n    });\r\n\r\n    this.checkCurrentRoute();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.routerSubscription) {\r\n      this.routerSubscription.unsubscribe();\r\n    }\r\n    if (this.authSubscription) {\r\n      this.authSubscription.unsubscribe();\r\n    }\r\n    if (this.profileSubscription) {\r\n      this.profileSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  @HostListener('window:scroll', [])\r\n  onWindowScroll() {\r\n    if (!isPlatformBrowser(this.platformId) || this.router.url !== '/') {\r\n      return;\r\n    }\r\n\r\n    const sections = ['home', 'categories', 'featured', 'bestsellers', 'new-arrivals'];\r\n    const scrollPosition = window.pageYOffset + 100; // Offset for header height\r\n\r\n    for (let i = sections.length - 1; i >= 0; i--) {\r\n      const section = document.getElementById(sections[i]);\r\n      if (section && section.offsetTop <= scrollPosition) {\r\n        this.activeSection = sections[i];\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  checkCurrentRoute() {\r\n    if (this.router.url === '/') {\r\n      // Set initial active section for home page\r\n      setTimeout(() => {\r\n        this.onWindowScroll();\r\n      }, 100);\r\n    } else {\r\n      this.activeSection = '';\r\n    }\r\n  }\r\n\r\n  toggleMenu() {\r\n    this.isMenuOpen = !this.isMenuOpen;\r\n  }\r\n\r\n  scrollToSection(sectionId: string, event: Event) {\r\n    event.preventDefault();\r\n    \r\n    if (!isPlatformBrowser(this.platformId)) {\r\n      return;\r\n    }\r\n\r\n    // If not on home page, navigate to home first\r\n    if (this.router.url !== '/') {\r\n      this.router.navigate(['/']).then(() => {\r\n        setTimeout(() => {\r\n          this.performScroll(sectionId);\r\n        }, 100);\r\n      });\r\n    } else {\r\n      this.performScroll(sectionId);\r\n    }\r\n\r\n    // Close mobile menu if open\r\n    this.isMenuOpen = false;\r\n  }\r\n\r\n  async signOut() {\r\n    try {\r\n      await this.authService.signOut();\r\n      this.router.navigate(['/']);\r\n    } catch (error) {\r\n      console.error('Sign out error:', error);\r\n    }\r\n  }\r\n\r\n  isAdmin(): boolean {\r\n    return this.currentUserProfile?.role === 'admin';\r\n  }\r\n\r\n  private performScroll(sectionId: string) {\r\n    const element = document.getElementById(sectionId);\r\n    if (element) {\r\n      const headerOffset = 80; // Height of fixed header\r\n      const elementPosition = element.offsetTop;\r\n      const offsetPosition = elementPosition - headerOffset;\r\n\r\n      window.scrollTo({\r\n        top: offsetPosition,\r\n        behavior: 'smooth'\r\n      });\r\n\r\n      // Update active section immediately\r\n      this.activeSection = sectionId;\r\n    }\r\n  }\r\n}\r\n", "<header class=\"main-header\">\r\n  <div class=\"container\">\r\n    <div class=\"header-content\">\r\n      <!-- Logo -->\r\n      <div class=\"logo\">\r\n        <a routerLink=\"/\">\r\n          <h1>📚 Readify</h1>\r\n        </a>\r\n      </div>\r\n\r\n      <!-- Navigation -->\r\n      <nav class=\"main-nav\" [class.active]=\"isMenuOpen\">\r\n        <ul>\r\n          <li><a href=\"#home\" (click)=\"scrollToSection('home', $event)\" [class.active]=\"activeSection === 'home'\">Home</a></li>\r\n          <li><a href=\"#categories\" (click)=\"scrollToSection('categories', $event)\" [class.active]=\"activeSection === 'categories'\">Categories</a></li>\r\n          <li><a href=\"#featured\" (click)=\"scrollToSection('featured', $event)\" [class.active]=\"activeSection === 'featured'\">Featured</a></li>\r\n          <li><a href=\"#bestsellers\" (click)=\"scrollToSection('bestsellers', $event)\" [class.active]=\"activeSection === 'bestsellers'\">Bestsellers</a></li>\r\n          <li><a href=\"#new-arrivals\" (click)=\"scrollToSection('new-arrivals', $event)\" [class.active]=\"activeSection === 'new-arrivals'\">New Arrivals</a></li>\r\n        </ul>\r\n      </nav>\r\n\r\n      <!-- User Actions -->\r\n      <div class=\"user-actions\">\r\n        <app-currency-selector></app-currency-selector>\r\n        <button class=\"search-btn\" routerLink=\"/search\">\r\n          <span class=\"search-icon\">🔍</span>\r\n        </button>\r\n        <button class=\"cart-btn\" routerLink=\"/cart\">\r\n          <span class=\"cart-icon\">🛒</span>\r\n          <span class=\"cart-count\" *ngIf=\"(cartItemCount$ | async)! > 0\">{{ cartItemCount$ | async }}</span>\r\n          <span class=\"sync-indicator\" \r\n                [class.synced]=\"currentUser\" \r\n                [class.local]=\"!currentUser\"\r\n                [title]=\"currentUser ? 'Cart synced with your account' : 'Cart saved locally only'\">\r\n            {{ currentUser ? '☁️' : '💾' }}\r\n          </span>\r\n        </button>\r\n        \r\n        <!-- Authentication Status -->\r\n        <div *ngIf=\"currentUser; else loginButton\" class=\"user-menu\">\r\n          <div class=\"user-info\">\r\n            <span class=\"user-name\">👤 {{ currentUser.displayName || currentUser.email }}</span>\r\n            <div class=\"user-dropdown\">\r\n              <button class=\"dropdown-item\">Profile</button>\r\n              <button class=\"dropdown-item\">My Books</button>\r\n              <button class=\"dropdown-item\">Settings</button>\r\n              <button *ngIf=\"isAdmin()\" class=\"dropdown-item admin-link\" routerLink=\"/admin\">\r\n                🔧 Admin Panel\r\n              </button>\r\n              <button class=\"dropdown-item logout-btn\" (click)=\"signOut()\">Sign Out</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <ng-template #loginButton>\r\n          <a routerLink=\"/login\" class=\"login-btn\">Sign In</a>\r\n        </ng-template>\r\n      </div>\r\n\r\n      <!-- Mobile Menu Toggle -->\r\n      <button class=\"mobile-menu-toggle\" (click)=\"toggleMenu()\">\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</header>\r\n", "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './footer.html',\r\n  styleUrl: './footer.scss'\r\n})\r\nexport class Footer {\r\n\r\n}\r\n", "<footer class=\"main-footer\">\r\n  <div class=\"container\">\r\n    <div class=\"footer-content\">\r\n      <div class=\"footer-section\">\r\n        <h3>📚 Readify</h3>\r\n        <p>Your one-stop destination for all your favorite books. Discover, read, and share the love of reading.</p>\r\n      </div>\r\n      \r\n      <div class=\"footer-section\">\r\n        <h4>Quick Links</h4>\r\n        <ul>\r\n          <li><a href=\"#home\">Home</a></li>\r\n          <li><a href=\"#books\">Books</a></li>\r\n          <li><a href=\"#categories\">Categories</a></li>\r\n          <li><a href=\"#about\">About Us</a></li>\r\n        </ul>\r\n      </div>\r\n      \r\n      <div class=\"footer-section\">\r\n        <h4>Categories</h4>\r\n        <ul>\r\n          <li><a href=\"#fiction\">Fiction</a></li>\r\n          <li><a href=\"#non-fiction\">Non-Fiction</a></li>\r\n          <li><a href=\"#mystery\">Mystery</a></li>\r\n          <li><a href=\"#romance\">Romance</a></li>\r\n        </ul>\r\n      </div>\r\n      \r\n      <div class=\"footer-section\">\r\n        <h4>Contact</h4>\r\n        <ul>\r\n          <li>📧 info&#64;readify.com</li>\r\n          <li>📞 (0212) 321 00 00</li>\r\n          <li>📍 Güzeltepe, Osmanpaşa Cd. No:7, 34060 Eyüpsultan/İstanbul</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"footer-bottom\">\r\n      <p>&copy; 2025 Readify. All rights reserved.</p>\r\n    </div>\r\n  </div>\r\n</footer>\r\n", "import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NotificationService, Notification } from '../../core/services/notification.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-notifications',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `\r\n    <div class=\"notifications-container\">\r\n      <div \r\n        *ngFor=\"let notification of notifications; trackBy: trackByNotification\"\r\n        class=\"notification\"\r\n        [class.success]=\"notification.type === 'success'\"\r\n        [class.info]=\"notification.type === 'info'\"\r\n        [class.warning]=\"notification.type === 'warning'\"\r\n        [class.error]=\"notification.type === 'error'\"\r\n        [@slideIn]\r\n      >\r\n        <div class=\"notification-icon\">\r\n          <span *ngIf=\"notification.type === 'success'\">✅</span>\r\n          <span *ngIf=\"notification.type === 'info'\">ℹ️</span>\r\n          <span *ngIf=\"notification.type === 'warning'\">⚠️</span>\r\n          <span *ngIf=\"notification.type === 'error'\">❌</span>\r\n        </div>\r\n        <div class=\"notification-content\">\r\n          <h4 class=\"notification-title\">{{ notification.title }}</h4>\r\n          <p class=\"notification-message\">{{ notification.message }}</p>\r\n        </div>\r\n        <button \r\n          class=\"notification-close\"\r\n          (click)=\"closeNotification(notification.id)\"\r\n          aria-label=\"Close notification\"\r\n        >\r\n          ×\r\n        </button>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .notifications-container {\r\n      position: fixed;\r\n      top: 100px;\r\n      right: 20px;\r\n      z-index: 2000;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 10px;\r\n      max-width: 350px;\r\n    }\r\n\r\n    .notification {\r\n      background: white;\r\n      border-radius: 12px;\r\n      padding: 16px;\r\n      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\r\n      border-left: 4px solid;\r\n      display: flex;\r\n      align-items: flex-start;\r\n      gap: 12px;\r\n      transition: all 0.3s ease;\r\n      animation: slideIn 0.3s ease-out;\r\n\r\n      &.success {\r\n        border-left-color: #2ecc71;\r\n        background: linear-gradient(135deg, #ffffff 0%, #f8fff8 100%);\r\n      }\r\n\r\n      &.info {\r\n        border-left-color: #3498db;\r\n        background: linear-gradient(135deg, #ffffff 0%, #f8fcff 100%);\r\n      }\r\n\r\n      &.warning {\r\n        border-left-color: #f39c12;\r\n        background: linear-gradient(135deg, #ffffff 0%, #fffdf8 100%);\r\n      }\r\n\r\n      &.error {\r\n        border-left-color: #e74c3c;\r\n        background: linear-gradient(135deg, #ffffff 0%, #fff8f8 100%);\r\n      }\r\n\r\n      &:hover {\r\n        transform: translateY(-2px);\r\n        box-shadow: 0 12px 30px rgba(0, 0, 0, 0.2);\r\n      }\r\n    }\r\n\r\n    @keyframes slideIn {\r\n      from {\r\n        transform: translateX(100%);\r\n        opacity: 0;\r\n      }\r\n      to {\r\n        transform: translateX(0);\r\n        opacity: 1;\r\n      }\r\n    }\r\n\r\n    .notification-icon {\r\n      font-size: 1.2rem;\r\n      flex-shrink: 0;\r\n      margin-top: 2px;\r\n    }\r\n\r\n    .notification-content {\r\n      flex: 1;\r\n    }\r\n\r\n    .notification-title {\r\n      font-size: 0.9rem;\r\n      font-weight: 600;\r\n      margin: 0 0 4px 0;\r\n      color: #333;\r\n    }\r\n\r\n    .notification-message {\r\n      font-size: 0.8rem;\r\n      margin: 0;\r\n      color: #666;\r\n      line-height: 1.4;\r\n    }\r\n\r\n    .notification-close {\r\n      background: none;\r\n      border: none;\r\n      font-size: 1.2rem;\r\n      cursor: pointer;\r\n      color: #999;\r\n      padding: 0;\r\n      width: 20px;\r\n      height: 20px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      border-radius: 50%;\r\n      transition: all 0.2s ease;\r\n      flex-shrink: 0;\r\n\r\n      &:hover {\r\n        background: rgba(0, 0, 0, 0.1);\r\n        color: #333;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      .notifications-container {\r\n        left: 20px;\r\n        right: 20px;\r\n        top: 80px;\r\n        max-width: none;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class NotificationsComponent implements OnInit, OnDestroy {\r\n  notifications: Notification[] = [];\r\n  private subscription?: Subscription;\r\n\r\n  constructor(private notificationService: NotificationService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.notificationService.notifications$.subscribe(\r\n      notifications => this.notifications = notifications\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  closeNotification(id: string): void {\r\n    this.notificationService.hide(id);\r\n  }\r\n\r\n  trackByNotification(index: number, notification: Notification): string {\r\n    return notification.id;\r\n  }\r\n}\r\n", "import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { Header } from './shared/header/header';\r\nimport { Footer } from './shared/footer/footer';\r\nimport { NotificationsComponent } from './shared/notifications/notifications';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  imports: [RouterOutlet, Header, Footer, NotificationsComponent],\r\n  templateUrl: './app.html',\r\n  styleUrl: './app.scss'\r\n})\r\nexport class App {\r\n  protected title = 'readify';\r\n}\r\n", "<app-header></app-header>\r\n<main>\r\n  <router-outlet></router-outlet>\r\n</main>\r\n<app-footer></app-footer>\r\n<app-notifications></app-notifications>", "import { bootstrapApplication } from '@angular/platform-browser';\r\nimport { appConfig } from './app/app.config';\r\nimport { App } from './app/app';\r\n\r\nbootstrapApplication(App, appConfig)\r\n  .catch((err) => console.error(err));\r\n"],
  "mappings": "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",
  "names": []
}
